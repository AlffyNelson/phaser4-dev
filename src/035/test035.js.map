{"version":3,"file":"test035.js","sources":["part03.ts","test035.ts"],"sourcesContent":["export default function ()\r\n{\r\n    const fs = `\r\n    precision mediump float;\r\n\r\n    varying vec4 vColor;\r\n    \r\n    void main (void)\r\n    {\r\n        gl_FragColor = vec4(vColor.x, vColor.y, vColor.z, 1.0);\r\n    }\r\n    `;\r\n    \r\n    const vs = `\r\n    attribute vec4 aColor;\r\n    attribute vec3 aVertexPosition;\r\n\r\n    varying vec4 vColor;\r\n    \r\n    void main (void)\r\n    {\r\n        vColor = aColor;\r\n\r\n        gl_Position = vec4(aVertexPosition, 1.0); \r\n    }\r\n    `;\r\n    \r\n    const canvas = document.getElementById('game') as HTMLCanvasElement;\r\n    const gl: WebGLRenderingContext = canvas.getContext('webgl');\r\n    \r\n    //  Create the shaders\r\n    \r\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n    \r\n    gl.shaderSource(fragmentShader, fs);\r\n    gl.compileShader(fragmentShader);\r\n    \r\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\r\n    \r\n    gl.shaderSource(vertexShader, vs);\r\n    gl.compileShader(vertexShader);\r\n    \r\n    const program = gl.createProgram();\r\n    \r\n    gl.attachShader(program, vertexShader);\r\n    gl.attachShader(program, fragmentShader);\r\n    gl.linkProgram(program);\r\n    \r\n    gl.useProgram(program);\r\n    \r\n    const vertexPositionAttrib = gl.getAttribLocation(program, 'aVertexPosition');\r\n    const vertexColorAttrib = gl.getAttribLocation(program, 'aColor');\r\n\r\n    gl.enableVertexAttribArray(vertexPositionAttrib);\r\n    gl.enableVertexAttribArray(vertexColorAttrib);\r\n    \r\n    //  Remember: 0 x 0 is the center of the viewport, -1 on the left +1 on the right\r\n    //  and the y axis goes up (-1 at the bottom to +1 at the top)\r\n    \r\n    /**\r\n  \t * #0 (-0.5,0.5) +--------------+  (0.5,0.5)  #3\r\n\t *               |              |\r\n\t *               |              |\r\n\t *               |      .(0,0)  |\r\n\t *               |              |\r\n\t *               |              | \r\n\t * #1(-0.5,-0.5) +--------------+  (0.5,-0.5) #2\r\n     */\r\n    \r\n    const vertices = new Float32Array([\r\n        -0.5, 0.5, 0.0,     // vertex 0\r\n        1.0, 0.0, 0.0, 1.0, // color 0\r\n        -0.5, -0.5, 0.0,    // vertex 1\r\n        1.0, 1.0, 0.0, 1.0, // color 1\r\n        0.5, -0.5, 0.0,     // vertex 2\r\n        1.0, 1.0, 0.0, 1.0, // color 2\r\n        0.5, 0.5, 0.0,      // vertex 3\r\n        1.0, 0.0, 0.0, 1.0  // color 3\r\n    ]);\r\n\r\n    /**\r\n     * The most important point to realise is that a single vertex is not simply its position,\r\n     * but a combination of all of its attributes. In this case, a position and a color make up a single vertex.\r\n     * \r\n     * Position: | pos0   | pos1   | pos2   | pos3   | pos4   |\r\n     * Color:    | color0 | color1 | color2 | color3 | color4 |\r\n     * \r\n     * Each index in the index buffer refers to a combination of both the position and a color attribute.\r\n     * That is, index 0 will fetch pos0 and color0; index 5 will fetch pos5 and color5, etc.\r\n     */\r\n\r\n     const indices = new Uint16Array([\r\n        0,\r\n        1,\r\n        2,\r\n        0,\r\n        2,\r\n        3\r\n    ]);\r\n\r\n    const vertexBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\r\n    \r\n    //  Should do: gl.bindBuffer(gl.ARRAY_BUFFER, null) unless creating another buffer right away (or rendering)\r\n    \r\n    const indexBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\r\n\r\n    const stride = 28;\r\n\r\n    function render ()\r\n    {\r\n        gl.clearColor(0, 0, 0, 1);\r\n        gl.enable(gl.DEPTH_TEST);\r\n    \r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n        gl.viewport(0, 0, 1024, 768);\r\n    \r\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n\r\n        /**\r\n         * Each vertex contains:\r\n         * \r\n         *  position (x,y,z - 3 floats)\r\n         *  color (r,g,b,a - 4 floats)\r\n         * \r\n         * 7 floats = 7 * 4 bytes = 28 bytes per vertex. This is our stride.\r\n         * The offset is how much data should be skipped at the start of each chunk.\r\n         * In our index, the color data is right after the position data.\r\n         * Position is 3 floats, so the offset for the color is 3 * 4 bytes = 12 bytes.\r\n         */\r\n\r\n        // size: A GLint specifying the number of components per vertex attribute. Must be 1, 2, 3, or 4 (i.e. vec3 = 3)\r\n        gl.vertexAttribPointer(vertexPositionAttrib, 3, gl.FLOAT, false, stride, 0);\r\n        gl.vertexAttribPointer(vertexColorAttrib, 4, gl.FLOAT, false, stride, 12);\r\n\r\n        gl.drawElements(gl.TRIANGLES, indices.length, gl.UNSIGNED_SHORT, 0);\r\n    }\r\n    \r\n    render();\r\n}\r\n","import part01 from './part01';\r\nimport part02 from './part02';\r\nimport part03 from './part03';\r\n\r\npart03();\r\n"],"names":["fs","vs","canvas","document","getElementById","gl","getContext","fragmentShader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","vertexShader","VERTEX_SHADER","program","createProgram","attachShader","linkProgram","useProgram","vertexPositionAttrib","getAttribLocation","vertexColorAttrib","enableVertexAttribArray","vertices","Float32Array","indices","Uint16Array","vertexBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","indexBuffer","ELEMENT_ARRAY_BUFFER","stride","render","clearColor","enable","DEPTH_TEST","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","viewport","vertexAttribPointer","FLOAT","drawElements","TRIANGLES","length","UNSIGNED_SHORT","part03"],"mappings":"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"}