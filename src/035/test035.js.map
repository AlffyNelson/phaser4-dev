{"version":3,"file":"test035.js","sources":["../../node_modules/@phaserjs/math-matrix2d/dist/Matrix2D.js","../../node_modules/@phaserjs/math-vec2/dist/Vec2.js","../../node_modules/@phaserjs/math-transform/dist/Transform.js","Sprite.ts","QuadShader.ts","../../node_modules/@phaserjs/math-matrix4/dist/Matrix4.js","../../node_modules/@phaserjs/math-matrix4-funcs/dist/Ortho.js","part14.ts","test035.ts"],"sourcesContent":["//  A Matrix2D contains six elements in a short-form of the 3x3 Matrix, with the last column ignored.\r\n//  |----|----|----|\r\n//  | a  | b  | 0  |\r\n//  |----|----|----|\r\n//  | c  | d  | 0  |\r\n//  |----|----|----|\r\n//  | tx | ty | 1  |\r\n//  |----|----|----|\r\nexport class Matrix2D {\r\n    /**\r\n     * Creates an instance of Matrix2D.\r\n     *\r\n     * @param {number} [a=1] - X scale.\r\n     * @param {number} [b=0] - X skew.\r\n     * @param {number} [c=0] - Y skew.\r\n     * @param {number} [d=1] - Y scale.\r\n     * @param {number} [tx=0] - X translation\r\n     * @param {number} [ty=0] - Y translation\r\n     * @memberof Matrix2D\r\n     */\r\n    constructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\r\n        this.set(a, b, c, d, tx, ty);\r\n    }\r\n    set(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n        this.d = d;\r\n        this.tx = tx;\r\n        this.ty = ty;\r\n        return this;\r\n    }\r\n    identity() {\r\n        return this.set();\r\n    }\r\n    toArray() {\r\n        return [this.a, this.b, this.c, this.d, this.tx, this.ty];\r\n    }\r\n    fromArray(src) {\r\n        return this.set(src[0], src[1], src[2], src[3], src[4], src[5]);\r\n    }\r\n    [Symbol.iterator]() {\r\n        const data = this.toArray();\r\n        return data[Symbol.iterator]();\r\n    }\r\n}\r\n//# sourceMappingURL=Matrix2D.js.map","export class Vec2 {\r\n    /**\r\n     * Creates an instance of a Vector2.\r\n     *\r\n     * @param {number} [x=0] - X component\r\n     * @param {number} [y=0] - Y component\r\n     * @memberof Vec2\r\n     */\r\n    constructor(x = 0, y = 0) {\r\n        this.set(x, y);\r\n    }\r\n    /**\r\n     * Sets the components of this Vector2.\r\n     *\r\n     * @param {number} [x=0] - X component\r\n     * @param {number} [y=0] - Y component\r\n     * @returns {Vec2}\r\n     * @memberof Vec2\r\n     */\r\n    set(x = 0, y = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        return this;\r\n    }\r\n    /**\r\n     * Sets all components of this Vector2 to zero.\r\n     *\r\n     * @returns {Vec2}\r\n     * @memberof Vec2\r\n     */\r\n    zero() {\r\n        return this.set();\r\n    }\r\n    /**\r\n     * Returns a new array containg the Vector2 component values.\r\n     *\r\n     * @returns {number[]}\r\n     * @memberof Vec2\r\n     */\r\n    getArray() {\r\n        return [this.x, this.y];\r\n    }\r\n    /**\r\n     * Sets the values of this Vector2 based on the given array, or array-like object, such as a Float32.\r\n     *\r\n     * The source must have 2 elements, starting from index 0 through to index 1.\r\n     *\r\n     * @param {number[]} src - The source array to copy the values from.\r\n     * @returns {Vec2}\r\n     * @memberof Vec2\r\n     */\r\n    fromArray(src) {\r\n        return this.set(src[0], src[1]);\r\n    }\r\n    [Symbol.iterator]() {\r\n        const data = this.getArray();\r\n        return data[Symbol.iterator]();\r\n    }\r\n}\r\n//# sourceMappingURL=Vec2.js.map","import { Matrix2D } from '@phaserjs/math-matrix2d';\r\nimport { Vec2 } from '@phaserjs/math-vec2';\r\nexport class Transform {\r\n    constructor(x = 0, y = 0, rotation = 0, scaleX = 1, scaleY = 1) {\r\n        this.local = new Matrix2D();\r\n        this.world = new Matrix2D();\r\n        this._position = new Vec2(x, y);\r\n        this._scale = new Vec2(scaleX, scaleY);\r\n        this._skew = new Vec2(0, 0);\r\n        this._origin = new Vec2(0, 0);\r\n        this._rotation = rotation;\r\n        this.dirty = true;\r\n    }\r\n    update() {\r\n        if (!this.dirty) {\r\n            return false;\r\n        }\r\n        const { _a, _b, _c, _d, _position } = this;\r\n        // tx = this._position.x - ((this._origin.x * a) + (this._origin.y * c));\r\n        // ty = this._position.y - ((this._origin.x * b) + (this._origin.y * d));\r\n        this.local.set(_a, _b, _c, _d, _position.x, _position.y);\r\n        this.dirty = false;\r\n        return true;\r\n    }\r\n    setPosition(x, y) {\r\n        this._position.set(x, y);\r\n        this.dirty = true;\r\n        return this;\r\n    }\r\n    setScale(scaleX, scaleY = scaleX) {\r\n        this._scale.set(scaleX, scaleY);\r\n        this.dirty = true;\r\n        this.updateCache();\r\n        return this;\r\n    }\r\n    setSkew(skewX, skewY) {\r\n        this._skew.set(skewX, skewY);\r\n        this.dirty = true;\r\n        this.updateCache();\r\n        return this;\r\n    }\r\n    setOrigin(originX, originY = originX) {\r\n        this._origin.set(originX, originY);\r\n        this.dirty = true;\r\n        return this;\r\n    }\r\n    setRotation(rotation) {\r\n        this.rotation = rotation;\r\n        return this;\r\n    }\r\n    updateCache() {\r\n        const { _rotation, _skew, _scale } = this;\r\n        this._a = Math.cos(_rotation + _skew.y) * _scale.x;\r\n        this._b = Math.sin(_rotation + _skew.y) * _scale.x;\r\n        this._c = -Math.sin(_rotation - _skew.x) * _scale.y;\r\n        this._d = Math.cos(_rotation - _skew.x) * _scale.y;\r\n    }\r\n    set x(value) {\r\n        this._position.x = value;\r\n        this.dirty = true;\r\n    }\r\n    get x() {\r\n        return this._position.x;\r\n    }\r\n    set y(value) {\r\n        this._position.y = value;\r\n        this.dirty = true;\r\n    }\r\n    get y() {\r\n        return this._position.y;\r\n    }\r\n    set rotation(value) {\r\n        this._rotation = value;\r\n        this.dirty = true;\r\n        this.updateCache();\r\n    }\r\n    get rotation() {\r\n        return this._rotation;\r\n    }\r\n    set scaleX(value) {\r\n        this._scale.x = value;\r\n        this.dirty = true;\r\n        this.updateCache();\r\n    }\r\n    get scaleX() {\r\n        return this._scale.x;\r\n    }\r\n    set scaleY(value) {\r\n        this._scale.y = value;\r\n        this.dirty = true;\r\n        this.updateCache();\r\n    }\r\n    get scaleY() {\r\n        return this._scale.y;\r\n    }\r\n    set originX(value) {\r\n        this._origin.x = value;\r\n        this.dirty = true;\r\n    }\r\n    get originX() {\r\n        return this._origin.x;\r\n    }\r\n    set originY(value) {\r\n        this._origin.y = value;\r\n        this.dirty = true;\r\n    }\r\n    get originY() {\r\n        return this._origin.y;\r\n    }\r\n    set skewX(value) {\r\n        this._skew.x = value;\r\n        this.dirty = true;\r\n        this.updateCache();\r\n    }\r\n    get skewX() {\r\n        return this._skew.x;\r\n    }\r\n    set skewY(value) {\r\n        this._skew.y = value;\r\n        this.dirty = true;\r\n        this.updateCache();\r\n    }\r\n    get skewY() {\r\n        return this._skew.y;\r\n    }\r\n}\r\n//# sourceMappingURL=Transform.js.map","import { Transform } from '@phaserjs/math-transform';\nimport { Vec2 } from '@phaserjs/math-vec2';\n\nexport default class Sprite extends Transform\n{\n    readonly topLeft: Vec2;\n    readonly topRight: Vec2;\n    readonly bottomLeft: Vec2;\n    readonly bottomRight: Vec2;\n\n    readonly rgba;\n\n    visible: boolean = true;\n\n    private _size: Vec2;\n\n    constructor (x: number, y: number, width: number, height: number, r: number, g: number, b: number, a: number)\n    {\n        super(x, y);\n\n        this._size = new Vec2(width, height);\n\n        this.topLeft = new Vec2();\n        this.topRight = new Vec2();\n        this.bottomLeft = new Vec2();\n        this.bottomRight = new Vec2();\n\n        this.rgba = { r, g, b, a };\n\n        this.updateVertices();\n    }\n\n    updateVertices (): boolean\n    {\n        if (!this.dirty)\n        {\n            return false;\n        }\n\n        this.update();\n\n        const w: number = this._size.x;\n        const h: number = this._size.y;\n\n        const x0: number = -(this._origin.x * w);\n        const x1: number = x0 + w;\n        const y0: number = -(this._origin.y * h);\n        const y1: number = y0 + h;\n\n        const { a, b, c, d, tx, ty } = this.local;\n\n        //  Cache the calculations to avoid 8 getX/Y function calls:\n\n        const x0a: number = x0 * a;\n        const x0b: number = x0 * b;\n        const y0c: number = y0 * c;\n        const y0d: number = y0 * d;\n\n        const x1a: number = x1 * a;\n        const x1b: number = x1 * b;\n        const y1c: number = y1 * c;\n        const y1d: number = y1 * d;\n\n        this.topLeft.set(x0a + y0c + tx, x0b + y0d + ty);\n        this.topRight.set(x1a + y0c + tx, x1b + y0d + ty);\n        this.bottomLeft.set(x0a + y1c + tx, x0b + y1d + ty);\n        this.bottomRight.set(x1a + y1c + tx, x1b + y1d + ty);\n\n        return true;\n    }\n\n    batch (dataTA: Float32Array, offset: number)\n    {\n        dataTA[offset + 0] = this.topLeft.x;\n        dataTA[offset + 1] = this.topLeft.y;\n        dataTA[offset + 2] = this.rgba.r;\n        dataTA[offset + 3] = this.rgba.g;\n        dataTA[offset + 4] = this.rgba.b;\n        dataTA[offset + 5] = this.rgba.a;\n\n        dataTA[offset + 6] = this.bottomLeft.x;\n        dataTA[offset + 7] = this.bottomLeft.y;\n        dataTA[offset + 8] = this.rgba.r;\n        dataTA[offset + 9] = this.rgba.g;\n        dataTA[offset + 10] = this.rgba.b;\n        dataTA[offset + 11] = this.rgba.a;\n\n        dataTA[offset + 12] = this.bottomRight.x;\n        dataTA[offset + 13] = this.bottomRight.y;\n        dataTA[offset + 14] = this.rgba.r;\n        dataTA[offset + 15] = this.rgba.g;\n        dataTA[offset + 16] = this.rgba.b;\n        dataTA[offset + 17] = this.rgba.a;\n\n        dataTA[offset + 18] = this.topRight.x;\n        dataTA[offset + 19] = this.topRight.y;\n        dataTA[offset + 20] = this.rgba.r;\n        dataTA[offset + 21] = this.rgba.g;\n        dataTA[offset + 22] = this.rgba.b;\n        dataTA[offset + 23] = this.rgba.a;\n    }\n\n\n}","export default {\n\n    fragmentShader: `\n    precision mediump float;\n\n    varying vec4 vColor;\n    \n    void main (void)\n    {\n        gl_FragColor = vec4(vColor.r, vColor.g, vColor.b, vColor.a);\n    }\n    `,\n    \n    vertexShader: `\n    attribute vec4 aColor;\n    attribute vec2 aVertexPosition;\n\n    uniform mat4 uProjectionMatrix;\n\n    varying vec4 vColor;\n    \n    void main (void)\n    {\n        vColor = aColor;\n    \n        gl_Position = uProjectionMatrix * vec4(aVertexPosition, 0.0, 1.0);\n    }\n    `\n\n}\n","export class Matrix4 {\r\n    /**\r\n     * Creates an instance of a Matrix4.\r\n     *\r\n     * Format: column-major, when typed out it looks like row-major.\r\n     *\r\n     * @param {number} [m00=1] - Component in column 0, row 0 position (index 0)\r\n     * @param {number} [m01=0] - Component in column 0, row 1 position (index 1)\r\n     * @param {number} [m02=0] - Component in column 0, row 2 position (index 2)\r\n     * @param {number} [m03=0] - Component in column 0, row 3 position (index 3)\r\n     * @param {number} [m10=0] - Component in column 1, row 0 position (index 4)\r\n     * @param {number} [m11=1] - Component in column 1, row 1 position (index 5)\r\n     * @param {number} [m12=0] - Component in column 1, row 2 position (index 6)\r\n     * @param {number} [m13=0] - Component in column 1, row 3 position (index 7)\r\n     * @param {number} [m20=0] - Component in column 2, row 0 position (index 8)\r\n     * @param {number} [m21=0] - Component in column 2, row 1 position (index 9)\r\n     * @param {number} [m22=1] - Component in column 2, row 2 position (index 10)\r\n     * @param {number} [m23=0] - Component in column 2, row 3 position (index 11)\r\n     * @param {number} [m30=0] - Component in column 3, row 0 position (index 12)\r\n     * @param {number} [m31=0] - Component in column 3, row 1 position (index 13)\r\n     * @param {number} [m32=0] - Component in column 3, row 2 position (index 14)\r\n     * @param {number} [m33=1] - Component in column 3, row 3 position (index 15)\r\n     * @memberof Matrix4\r\n     */\r\n    constructor(m00 = 1, m01 = 0, m02 = 0, m03 = 0, m10 = 0, m11 = 1, m12 = 0, m13 = 0, m20 = 0, m21 = 0, m22 = 1, m23 = 0, m30 = 0, m31 = 0, m32 = 0, m33 = 1) {\r\n        this.set(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\r\n    }\r\n    /**\r\n     * Sets the components of this Matrix4.\r\n     *\r\n     * If no parameters are given it resets this Matrix4 to an identity matrix.\r\n     *\r\n     * @param {number} [m00=1] - Component in column 0, row 0 position (index 0)\r\n     * @param {number} [m01=0] - Component in column 0, row 1 position (index 1)\r\n     * @param {number} [m02=0] - Component in column 0, row 2 position (index 2)\r\n     * @param {number} [m03=0] - Component in column 0, row 3 position (index 3)\r\n     * @param {number} [m10=0] - Component in column 1, row 0 position (index 4)\r\n     * @param {number} [m11=1] - Component in column 1, row 1 position (index 5)\r\n     * @param {number} [m12=0] - Component in column 1, row 2 position (index 6)\r\n     * @param {number} [m13=0] - Component in column 1, row 3 position (index 7)\r\n     * @param {number} [m20=0] - Component in column 2, row 0 position (index 8)\r\n     * @param {number} [m21=0] - Component in column 2, row 1 position (index 9)\r\n     * @param {number} [m22=1] - Component in column 2, row 2 position (index 10)\r\n     * @param {number} [m23=0] - Component in column 2, row 3 position (index 11)\r\n     * @param {number} [m30=0] - Component in column 3, row 0 position (index 12)\r\n     * @param {number} [m31=0] - Component in column 3, row 1 position (index 13)\r\n     * @param {number} [m32=0] - Component in column 3, row 2 position (index 14)\r\n     * @param {number} [m33=1] - Component in column 3, row 3 position (index 15)\r\n     * @returns {Matrix4}\r\n     * @memberof Matrix4\r\n     */\r\n    set(m00 = 1, m01 = 0, m02 = 0, m03 = 0, m10 = 0, m11 = 1, m12 = 0, m13 = 0, m20 = 0, m21 = 0, m22 = 1, m23 = 0, m30 = 0, m31 = 0, m32 = 0, m33 = 1) {\r\n        this.m00 = m00;\r\n        this.m01 = m01;\r\n        this.m02 = m02;\r\n        this.m03 = m03;\r\n        this.m10 = m10;\r\n        this.m11 = m11;\r\n        this.m12 = m12;\r\n        this.m13 = m13;\r\n        this.m20 = m20;\r\n        this.m21 = m21;\r\n        this.m22 = m22;\r\n        this.m23 = m23;\r\n        this.m30 = m30;\r\n        this.m31 = m31;\r\n        this.m32 = m32;\r\n        this.m33 = m33;\r\n        return this;\r\n    }\r\n    /**\r\n     * Sets all components of this Matrix4 to zero.\r\n     *\r\n     * @returns {Matrix4}\r\n     * @memberof Matrix4\r\n     */\r\n    zero() {\r\n        return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\r\n    }\r\n    /**\r\n     * Resets this Matrix4 to an identity matrix.\r\n     *\r\n     * @returns {Matrix4}\r\n     * @memberof Matrix4\r\n     */\r\n    identity() {\r\n        return this.set();\r\n    }\r\n    /**\r\n     * Returns a new array containg the Matrix4 component values in column-major format.\r\n     *\r\n     * @returns {number[]}\r\n     * @memberof Matrix4\r\n     */\r\n    getArray() {\r\n        return [this.m00, this.m01, this.m02, this.m03, this.m10, this.m11, this.m12, this.m13, this.m20, this.m21, this.m22, this.m23, this.m30, this.m31, this.m32, this.m33];\r\n    }\r\n    /**\r\n     * Sets the values of this Matrix4 based on the given array, or array-like object, such as a Float32.\r\n     *\r\n     * The source must have 16 elements, starting from index 0 through to index 15.\r\n     *\r\n     * @param {number[]} src - The source array to copy the values from.\r\n     * @returns {Matrix4}\r\n     * @memberof Matrix4\r\n     */\r\n    fromArray(src) {\r\n        return this.set(src[0], src[1], src[2], src[3], src[4], src[5], src[6], src[7], src[8], src[9], src[10], src[11], src[12], src[13], src[14], src[15]);\r\n    }\r\n    [Symbol.iterator]() {\r\n        const data = this.getArray();\r\n        return data[Symbol.iterator]();\r\n    }\r\n}\r\n//# sourceMappingURL=Matrix4.js.map","import { Matrix4 } from '@phaserjs/math-matrix4';\r\nexport function Ortho(left, right, bottom, top, near, far) {\r\n    const lr = 1 / (left - right);\r\n    const bt = 1 / (bottom - top);\r\n    const nf = 1 / (near - far);\r\n    const m00 = -2 * lr;\r\n    const m11 = -2 * bt;\r\n    const m22 = 2 * nf;\r\n    const m30 = (left + right) * lr;\r\n    const m31 = (top + bottom) * bt;\r\n    const m32 = (far + near) * nf;\r\n    return new Matrix4(m00, 0, 0, 0, 0, m11, 0, 0, 0, 0, m22, 0, m30, m31, m32, 1);\r\n}\r\n//# sourceMappingURL=Ortho.js.map","import Sprite from './Sprite';\nimport QuadShader from './QuadShader';\nimport { Ortho } from '@phaserjs/math-matrix4-funcs';\nimport { gsap } from '../../node_modules/gsap/index';\n\nexport default function ()\n{\n    const canvas = document.getElementById('game') as HTMLCanvasElement;\n\n    canvas.width = 800;\n    canvas.height = 600;\n\n    const gl: WebGLRenderingContext = canvas.getContext('webgl');\n    \n    //  Create the shaders\n    \n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    \n    gl.shaderSource(fragmentShader, QuadShader.fragmentShader);\n    gl.compileShader(fragmentShader);\n    \n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    \n    gl.shaderSource(vertexShader, QuadShader.vertexShader);\n    gl.compileShader(vertexShader);\n    \n    const program = gl.createProgram();\n    \n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    \n    gl.useProgram(program);\n    \n    const vertexPositionAttrib = gl.getAttribLocation(program, 'aVertexPosition');\n    const vertexColorAttrib = gl.getAttribLocation(program, 'aColor');\n    const uProjectionMatrix = gl.getUniformLocation(program, 'uProjectionMatrix');\n\n    gl.enableVertexAttribArray(vertexPositionAttrib);\n    gl.enableVertexAttribArray(vertexColorAttrib);\n    \n    const resolution = { x: 800, y: 600 };\n\n    const sprites: Sprite[] = [];\n\n    const maxSprites = 404;\n    const maxSpritesPerBatch = 100;\n\n    //  The size in bytes per element in the dataArray\n    const size = 4;\n\n    //  Size in bytes of a single vertex\n    const singleVertexSize = 24;\n\n    //  Size of a single sprite in array elements\n    const singleSpriteSize = 24;\n\n    //  Size in bytes of a single sprite\n    const singleSpriteByteSize = singleVertexSize * 4;\n\n    //  Size in bytes of a single vertex indicies\n    const singleIndexSize = 4;\n\n    //  The size of our ArrayBuffer\n    const bufferByteSize = maxSpritesPerBatch * singleSpriteByteSize;\n\n    //  Our ArrayBuffer + View\n    const dataTA = new Float32Array(bufferByteSize);\n\n    let ibo = [];\n    let iboIndex = 0;\n\n    let x = 0;\n    let y = 0;\n    \n    for (let i = 0; i < maxSprites; i++)\n    {\n        // let x = Math.floor(Math.random() * resolution.x);\n        // let y = Math.floor(Math.random() * resolution.y);\n        // let s = 0.1 + Math.random() * 0.2;\n\n        // let s = 0.2;\n\n        let r = Math.min(1, 0.2 + Math.random());\n        let g = Math.min(1, 0.2 + Math.random());\n        let b = Math.min(1, 0.2 + Math.random());\n    \n        let sprite = new Sprite(x, y, 32, 32, r, g, b, 1);\n    \n        // sprite.setOrigin(0.5);\n        // sprite.setScale(s);\n   \n        sprites.push(sprite);\n\n        if (i < maxSpritesPerBatch)\n        {\n            ibo.push(iboIndex + 0, iboIndex + 1, iboIndex + 2, iboIndex + 2, iboIndex + 3, iboIndex + 0);\n\n            iboIndex += singleIndexSize;\n        }\n\n        x += 32;\n\n        if (x === 800)\n        {\n            x = 0;\n            y += 32;\n        }\n    }\n\n    console.log('sprites array', sprites.length);\n    console.log(maxSprites, 'sprites total', dataTA.byteLength, 'bytes', dataTA.byteLength / 1e+6, 'MB');\n    console.log('maxSpritesPerBatch', maxSpritesPerBatch, 'bytes:', bufferByteSize, 'batch', dataTA.length / singleSpriteSize);\n\n    const vertexBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, dataTA, gl.DYNAMIC_DRAW);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    \n    const indexBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(ibo), gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n    //  This matrix will convert from pixels to clip space - it only needs to be set when the canvas is sized\n    const projectionMatrix = Ortho(0, resolution.x, resolution.y, 0, -1000, 1000);\n\n    const stride = 24;\n\n    /*\n    quads.forEach((quad) => {\n\n        let duration = 1 + Math.random() * 4;\n        // let rotation = Math.PI * 2;\n        let rotation = 0;\n        let scale = 0.01 + (Math.random() / 2);\n        let skewX = -4 + Math.random() * 8;\n        let skewY = -4 + Math.random() * 8;\n    \n        //  !!! Warning !!! This uses up LOTS of CPU time:\n        // gsap.to(quad, { duration, scaleX: scale, scaleY: scale, ease: 'sine.inOut', yoyo: true, repeat: -1 });\n        // gsap.to(quad, { duration, rotation, skewX, skewY, ease: 'sine.inOut',  yoyo: true, repeat: -1 });\n        gsap.to(quad, { duration, scaleX: scale, scaleY: scale, skewX, skewY, ease: 'sine.inOut',  yoyo: true, repeat: -1 });\n\n    });\n    */\n\n    window.addEventListener('click', () => {\n\n        let i = Math.floor(Math.random() * sprites.length);\n\n        console.log(i);\n\n        sprites[i].visible = false;\n\n    });\n\n    function flush (offset: number)\n    {\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n\n        if (offset === bufferByteSize)\n        {\n            // console.log('full draw');\n            gl.bufferData(gl.ARRAY_BUFFER, dataTA, gl.DYNAMIC_DRAW);\n        }\n        else\n        {\n            // console.log('sub draw');\n\n            let view = dataTA.subarray(0, offset);\n\n            //  What's the difference here? We're drawing into a new subarray view anyway, maybe we don't\n            //  actually need the subarray at all?\n\n            gl.bufferSubData(gl.ARRAY_BUFFER, 0, view);\n\n            // gl.bufferData(gl.ARRAY_BUFFER, view, gl.DYNAMIC_DRAW);\n        }\n\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n\n        gl.vertexAttribPointer(vertexPositionAttrib, 2, gl.FLOAT, false, stride, 0);\n        gl.vertexAttribPointer(vertexColorAttrib, 4, gl.FLOAT, false, stride, 8);\n\n        gl.uniformMatrix4fv(uProjectionMatrix, false, projectionMatrix);\n\n        gl.drawElements(gl.TRIANGLES, ibo.length, gl.UNSIGNED_SHORT, 0);\n    }\n\n    function render ()\n    {\n        gl.clearColor(0, 0, 0, 1);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n        gl.viewport(0, 0, canvas.width, canvas.height);\n    \n        let bytesOffset = 0;\n        let spriteOffset = 0;\n\n        sprites.forEach((sprite) => {\n\n            if (sprite.visible)\n            {\n                sprite.updateVertices();\n                sprite.batch(dataTA, spriteOffset);\n\n                //  The offset here is the offset into the array, NOT a byte size!\n                spriteOffset += singleSpriteSize;\n\n                bytesOffset += singleSpriteByteSize;\n\n                if (bytesOffset === bufferByteSize)\n                {\n                    flush(bytesOffset);\n\n                    bytesOffset = 0;\n                    spriteOffset = 0;\n                }\n            }\n\n        });\n\n        if (bytesOffset > 0)\n        {\n            flush(bytesOffset);\n        }\n\n        requestAnimationFrame(render);\n    }\n    \n    render();\n}\n","import part01 from './part01';\nimport part02 from './part02';\nimport part03 from './part03';\nimport part04 from './part04';\nimport part05 from './part05';\nimport part06 from './part06';\nimport part07 from './part07';\nimport part08 from './part08';\nimport part09 from './part09';\nimport part10 from './part10';\nimport part11 from './part11';\nimport part12 from './part12';\nimport part13 from './part13';\nimport part14 from './part14';\n\n// part10();\npart14();\n\n//  Next steps:\n\n//  * Camera matrix, added to the shader (projection * camera * vertex pos), so we can move the camera around, rotate it, etc.\n//  * Sub-data buffer with batch flush, like current renderer handles it\n//  * Transform stack test (Quad with children, children of children, etc)\n//  * Instead of a Quad class, try a class that can have any number of vertices in it (ala Rope), or any vertex moved\n\n//  * Add a basic display list, so the buffer is cleared each frame and populated via the list\n//  X Try adding all quads to a single huge buffer on creation (remove on destruction), then in the render loop\n//    copy chunks from this buffer to the gl buffer - depends how fast typed array copies are vs. pushing elements by index\n"],"names":["Sprite","Transform","constructor","x","y","width","height","r","g","b","a","_size","Vec2","topLeft","topRight","bottomLeft","bottomRight","rgba","updateVertices","dirty","update","w","h","x0","_origin","x1","y0","y1","c","d","tx","ty","local","x0a","x0b","y0c","y0d","x1a","x1b","y1c","y1d","set","batch","dataTA","offset","fragmentShader","vertexShader","canvas","document","getElementById","gl","getContext","createShader","FRAGMENT_SHADER","shaderSource","QuadShader","compileShader","VERTEX_SHADER","program","createProgram","attachShader","linkProgram","useProgram","vertexPositionAttrib","getAttribLocation","vertexColorAttrib","uProjectionMatrix","getUniformLocation","enableVertexAttribArray","resolution","sprites","maxSprites","maxSpritesPerBatch","singleVertexSize","singleSpriteSize","singleSpriteByteSize","singleIndexSize","bufferByteSize","Float32Array","ibo","iboIndex","i","Math","min","random","sprite","push","console","log","length","byteLength","vertexBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","DYNAMIC_DRAW","indexBuffer","ELEMENT_ARRAY_BUFFER","Uint16Array","STATIC_DRAW","projectionMatrix","Ortho","stride","window","addEventListener","floor","visible","flush","view","subarray","bufferSubData","vertexAttribPointer","FLOAT","uniformMatrix4fv","drawElements","TRIANGLES","UNSIGNED_SHORT","render","clearColor","clear","COLOR_BUFFER_BIT","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","viewport","bytesOffset","spriteOffset","forEach","requestAnimationFrame","part14"],"mappings":"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"}