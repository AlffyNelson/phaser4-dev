{"version":3,"file":"test035.js","sources":["../../node_modules/@phaserjs/math-matrix2d/dist/Matrix2D.js","../../node_modules/@phaserjs/math-vec2/dist/Vec2.js","../../node_modules/@phaserjs/math-transform/dist/Transform.js","TexturedSprite.ts","Texture.ts","TexturedQuadShader.ts","../../node_modules/@phaserjs/math-matrix4/dist/Matrix4.js","../../node_modules/@phaserjs/math-matrix4-funcs/dist/Ortho.js","part17.ts","test035.ts"],"sourcesContent":["//  A Matrix2D contains six elements in a short-form of the 3x3 Matrix, with the last column ignored.\r\n//  |----|----|----|\r\n//  | a  | b  | 0  |\r\n//  |----|----|----|\r\n//  | c  | d  | 0  |\r\n//  |----|----|----|\r\n//  | tx | ty | 1  |\r\n//  |----|----|----|\r\nexport class Matrix2D {\r\n    /**\r\n     * Creates an instance of Matrix2D.\r\n     *\r\n     * @param {number} [a=1] - X scale.\r\n     * @param {number} [b=0] - X skew.\r\n     * @param {number} [c=0] - Y skew.\r\n     * @param {number} [d=1] - Y scale.\r\n     * @param {number} [tx=0] - X translation\r\n     * @param {number} [ty=0] - Y translation\r\n     * @memberof Matrix2D\r\n     */\r\n    constructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\r\n        this.set(a, b, c, d, tx, ty);\r\n    }\r\n    set(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n        this.d = d;\r\n        this.tx = tx;\r\n        this.ty = ty;\r\n        return this;\r\n    }\r\n    identity() {\r\n        return this.set();\r\n    }\r\n    toArray() {\r\n        return [this.a, this.b, this.c, this.d, this.tx, this.ty];\r\n    }\r\n    fromArray(src) {\r\n        return this.set(src[0], src[1], src[2], src[3], src[4], src[5]);\r\n    }\r\n    [Symbol.iterator]() {\r\n        const data = this.toArray();\r\n        return data[Symbol.iterator]();\r\n    }\r\n}\r\n//# sourceMappingURL=Matrix2D.js.map","export class Vec2 {\r\n    /**\r\n     * Creates an instance of a Vector2.\r\n     *\r\n     * @param {number} [x=0] - X component\r\n     * @param {number} [y=0] - Y component\r\n     * @memberof Vec2\r\n     */\r\n    constructor(x = 0, y = 0) {\r\n        this.set(x, y);\r\n    }\r\n    /**\r\n     * Sets the components of this Vector2.\r\n     *\r\n     * @param {number} [x=0] - X component\r\n     * @param {number} [y=0] - Y component\r\n     * @returns {Vec2}\r\n     * @memberof Vec2\r\n     */\r\n    set(x = 0, y = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        return this;\r\n    }\r\n    /**\r\n     * Sets all components of this Vector2 to zero.\r\n     *\r\n     * @returns {Vec2}\r\n     * @memberof Vec2\r\n     */\r\n    zero() {\r\n        return this.set();\r\n    }\r\n    /**\r\n     * Returns a new array containg the Vector2 component values.\r\n     *\r\n     * @returns {number[]}\r\n     * @memberof Vec2\r\n     */\r\n    getArray() {\r\n        return [this.x, this.y];\r\n    }\r\n    /**\r\n     * Sets the values of this Vector2 based on the given array, or array-like object, such as a Float32.\r\n     *\r\n     * The source must have 2 elements, starting from index 0 through to index 1.\r\n     *\r\n     * @param {number[]} src - The source array to copy the values from.\r\n     * @returns {Vec2}\r\n     * @memberof Vec2\r\n     */\r\n    fromArray(src) {\r\n        return this.set(src[0], src[1]);\r\n    }\r\n    [Symbol.iterator]() {\r\n        const data = this.getArray();\r\n        return data[Symbol.iterator]();\r\n    }\r\n}\r\n//# sourceMappingURL=Vec2.js.map","import { Matrix2D } from '@phaserjs/math-matrix2d';\r\nimport { Vec2 } from '@phaserjs/math-vec2';\r\nexport class Transform {\r\n    constructor(x = 0, y = 0, rotation = 0, scaleX = 1, scaleY = 1) {\r\n        this.local = new Matrix2D();\r\n        this.world = new Matrix2D();\r\n        this._position = new Vec2(x, y);\r\n        this._scale = new Vec2(scaleX, scaleY);\r\n        this._skew = new Vec2(0, 0);\r\n        this._origin = new Vec2(0, 0);\r\n        this._rotation = rotation;\r\n        this.dirty = true;\r\n    }\r\n    update() {\r\n        if (!this.dirty) {\r\n            return false;\r\n        }\r\n        const { _a, _b, _c, _d, _position } = this;\r\n        // tx = this._position.x - ((this._origin.x * a) + (this._origin.y * c));\r\n        // ty = this._position.y - ((this._origin.x * b) + (this._origin.y * d));\r\n        this.local.set(_a, _b, _c, _d, _position.x, _position.y);\r\n        this.dirty = false;\r\n        return true;\r\n    }\r\n    setPosition(x, y) {\r\n        this._position.set(x, y);\r\n        this.dirty = true;\r\n        return this;\r\n    }\r\n    setScale(scaleX, scaleY = scaleX) {\r\n        this._scale.set(scaleX, scaleY);\r\n        this.dirty = true;\r\n        this.updateCache();\r\n        return this;\r\n    }\r\n    setSkew(skewX, skewY) {\r\n        this._skew.set(skewX, skewY);\r\n        this.dirty = true;\r\n        this.updateCache();\r\n        return this;\r\n    }\r\n    setOrigin(originX, originY = originX) {\r\n        this._origin.set(originX, originY);\r\n        this.dirty = true;\r\n        return this;\r\n    }\r\n    setRotation(rotation) {\r\n        this.rotation = rotation;\r\n        return this;\r\n    }\r\n    updateCache() {\r\n        const { _rotation, _skew, _scale } = this;\r\n        this._a = Math.cos(_rotation + _skew.y) * _scale.x;\r\n        this._b = Math.sin(_rotation + _skew.y) * _scale.x;\r\n        this._c = -Math.sin(_rotation - _skew.x) * _scale.y;\r\n        this._d = Math.cos(_rotation - _skew.x) * _scale.y;\r\n    }\r\n    set x(value) {\r\n        this._position.x = value;\r\n        this.dirty = true;\r\n    }\r\n    get x() {\r\n        return this._position.x;\r\n    }\r\n    set y(value) {\r\n        this._position.y = value;\r\n        this.dirty = true;\r\n    }\r\n    get y() {\r\n        return this._position.y;\r\n    }\r\n    set rotation(value) {\r\n        this._rotation = value;\r\n        this.dirty = true;\r\n        this.updateCache();\r\n    }\r\n    get rotation() {\r\n        return this._rotation;\r\n    }\r\n    set scaleX(value) {\r\n        this._scale.x = value;\r\n        this.dirty = true;\r\n        this.updateCache();\r\n    }\r\n    get scaleX() {\r\n        return this._scale.x;\r\n    }\r\n    set scaleY(value) {\r\n        this._scale.y = value;\r\n        this.dirty = true;\r\n        this.updateCache();\r\n    }\r\n    get scaleY() {\r\n        return this._scale.y;\r\n    }\r\n    set originX(value) {\r\n        this._origin.x = value;\r\n        this.dirty = true;\r\n    }\r\n    get originX() {\r\n        return this._origin.x;\r\n    }\r\n    set originY(value) {\r\n        this._origin.y = value;\r\n        this.dirty = true;\r\n    }\r\n    get originY() {\r\n        return this._origin.y;\r\n    }\r\n    set skewX(value) {\r\n        this._skew.x = value;\r\n        this.dirty = true;\r\n        this.updateCache();\r\n    }\r\n    get skewX() {\r\n        return this._skew.x;\r\n    }\r\n    set skewY(value) {\r\n        this._skew.y = value;\r\n        this.dirty = true;\r\n        this.updateCache();\r\n    }\r\n    get skewY() {\r\n        return this._skew.y;\r\n    }\r\n}\r\n//# sourceMappingURL=Transform.js.map","import Texture from './Texture';\r\nimport { Transform } from '@phaserjs/math-transform';\r\nimport { Vec2 } from '@phaserjs/math-vec2';\r\n\r\nexport default class Sprite extends Transform\r\n{\r\n    readonly topLeft: Vec2;\r\n    readonly topRight: Vec2;\r\n    readonly bottomLeft: Vec2;\r\n    readonly bottomRight: Vec2;\r\n\r\n    readonly rgba;\r\n\r\n    visible: boolean = true;\r\n    texture: Texture = null;\r\n\r\n    uv = {\r\n        topLeft: { x: 0, y: 0 },\r\n        topRight: { x: 1, y: 0 },\r\n        bottomLeft: { x: 0, y: 1 },\r\n        bottomRight: { x: 1, y: 1 }\r\n    };\r\n\r\n    private _size: Vec2;\r\n\r\n    constructor (x: number, y: number, width: number, height: number, r: number = 1, g: number = 1, b: number = 1, a: number = 1)\r\n    {\r\n        super(x, y);\r\n\r\n        this._size = new Vec2(width, height);\r\n\r\n        this.topLeft = new Vec2();\r\n        this.topRight = new Vec2();\r\n        this.bottomLeft = new Vec2();\r\n        this.bottomRight = new Vec2();\r\n\r\n        this.rgba = { r, g, b, a };\r\n\r\n        this.updateVertices();\r\n    }\r\n\r\n    setTexture (texture: Texture)\r\n    {\r\n        this.texture = texture;\r\n\r\n        this._size.set(texture.width, texture.height);\r\n\r\n        this.dirty = true;\r\n\r\n        this.updateVertices();\r\n\r\n        return this;\r\n    }\r\n\r\n    updateVertices (): boolean\r\n    {\r\n        if (!this.dirty)\r\n        {\r\n            return false;\r\n        }\r\n\r\n        this.update();\r\n\r\n        const w: number = this._size.x;\r\n        const h: number = this._size.y;\r\n\r\n        const x0: number = -(this._origin.x * w);\r\n        const x1: number = x0 + w;\r\n        const y0: number = -(this._origin.y * h);\r\n        const y1: number = y0 + h;\r\n\r\n        const { a, b, c, d, tx, ty } = this.local;\r\n\r\n        //  Cache the calculations to avoid 8 getX/Y function calls:\r\n\r\n        const x0a: number = x0 * a;\r\n        const x0b: number = x0 * b;\r\n        const y0c: number = y0 * c;\r\n        const y0d: number = y0 * d;\r\n\r\n        const x1a: number = x1 * a;\r\n        const x1b: number = x1 * b;\r\n        const y1c: number = y1 * c;\r\n        const y1d: number = y1 * d;\r\n\r\n        this.topLeft.set(x0a + y0c + tx, x0b + y0d + ty);\r\n        this.topRight.set(x1a + y0c + tx, x1b + y0d + ty);\r\n        this.bottomLeft.set(x0a + y1c + tx, x0b + y1d + ty);\r\n        this.bottomRight.set(x1a + y1c + tx, x1b + y1d + ty);\r\n\r\n        return true;\r\n    }    \r\n\r\n    batch (dataTA: Float32Array, offset: number)\r\n    {\r\n        dataTA[offset + 0] = this.topLeft.x;\r\n        dataTA[offset + 1] = this.topLeft.y;\r\n        dataTA[offset + 2] = this.rgba.r;\r\n        dataTA[offset + 3] = this.rgba.g;\r\n        dataTA[offset + 4] = this.rgba.b;\r\n        dataTA[offset + 5] = this.rgba.a;\r\n        dataTA[offset + 6] = this.uv.topLeft.x;\r\n        dataTA[offset + 7] = this.uv.topLeft.y;\r\n\r\n        dataTA[offset + 8] = this.bottomLeft.x;\r\n        dataTA[offset + 9] = this.bottomLeft.y;\r\n        dataTA[offset + 10] = this.rgba.r;\r\n        dataTA[offset + 11] = this.rgba.g;\r\n        dataTA[offset + 12] = this.rgba.b;\r\n        dataTA[offset + 13] = this.rgba.a;\r\n        dataTA[offset + 14] = this.uv.bottomLeft.x;\r\n        dataTA[offset + 15] = this.uv.bottomLeft.y;\r\n\r\n        dataTA[offset + 16] = this.bottomRight.x;\r\n        dataTA[offset + 17] = this.bottomRight.y;\r\n        dataTA[offset + 18] = this.rgba.r;\r\n        dataTA[offset + 19] = this.rgba.g;\r\n        dataTA[offset + 20] = this.rgba.b;\r\n        dataTA[offset + 21] = this.rgba.a;\r\n        dataTA[offset + 22] = this.uv.bottomRight.x;\r\n        dataTA[offset + 23] = this.uv.bottomRight.y;\r\n\r\n        dataTA[offset + 24] = this.topRight.x;\r\n        dataTA[offset + 25] = this.topRight.y;\r\n        dataTA[offset + 26] = this.rgba.r;\r\n        dataTA[offset + 27] = this.rgba.g;\r\n        dataTA[offset + 28] = this.rgba.b;\r\n        dataTA[offset + 29] = this.rgba.a;\r\n        dataTA[offset + 30] = this.uv.topRight.x;\r\n        dataTA[offset + 31] = this.uv.topRight.y;\r\n    }\r\n\r\n}","//  Base Texture\r\n\r\nexport default class Texture\r\n{\r\n    key: string;\r\n\r\n    width: number;\r\n    height: number;\r\n\r\n    image: HTMLImageElement;\r\n    gl: WebGLRenderingContext;\r\n    glTexture: WebGLTexture;\r\n\r\n    _onLoadCallback: Function;\r\n\r\n    constructor (key: string, gl: WebGLRenderingContext)\r\n    {\r\n        this.key = key;\r\n\r\n        this.gl = gl;\r\n    }\r\n\r\n    onLoad ()\r\n    {\r\n        // console.log(this.key, 'loaded');\r\n\r\n        const gl = this.gl;\r\n\r\n        this.glTexture = this.gl.createTexture();\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, this.glTexture);\r\n\r\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.image);\r\n\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n        this.width = this.image.width;\r\n        this.height = this.image.height;\r\n\r\n        //  POT only\r\n        // gl.generateMipmap(gl.TEXTURE_2D);\r\n\r\n        this.image.onload = null;\r\n\r\n        if (this._onLoadCallback)\r\n        {\r\n            this._onLoadCallback(this);\r\n        }\r\n    }\r\n\r\n    load (url: string, callback?: Function)\r\n    {\r\n        // console.log(this.key, 'loading');\r\n\r\n        this.image = new Image();\r\n\r\n        this.image.onload = () => this.onLoad();\r\n\r\n        this.image.src = url;\r\n\r\n        if (callback)\r\n        {\r\n            this._onLoadCallback = callback;\r\n        }\r\n\r\n        // Image is immediately-available / cached\r\n        if (this.image.complete && this.image.width && this.image.height)\r\n        {\r\n            this.onLoad();\r\n        }\r\n    }\r\n}\r\n","export default {\r\n\r\n    fragmentShader: `\r\n    precision mediump float;\r\n\r\n    varying vec4 vColor;\r\n    varying vec2 vTextureCoord;\r\n\r\n    uniform sampler2D uTexture;\r\n    \r\n    void main (void)\r\n    {\r\n        gl_FragColor = texture2D(uTexture, vTextureCoord) * vColor;\r\n    }\r\n    `,\r\n    \r\n    vertexShader: `\r\n    attribute vec4 aColor;\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n\r\n    uniform mat4 uProjectionMatrix;\r\n\r\n    varying vec4 vColor;\r\n    varying vec2 vTextureCoord;\r\n    \r\n    void main (void)\r\n    {\r\n        vColor = aColor;\r\n        vTextureCoord = aTextureCoord;\r\n    \r\n        gl_Position = uProjectionMatrix * vec4(aVertexPosition, 0.0, 1.0);\r\n    }\r\n    `\r\n\r\n}\r\n","export class Matrix4 {\r\n    /**\r\n     * Creates an instance of a Matrix4.\r\n     *\r\n     * Format: column-major, when typed out it looks like row-major.\r\n     *\r\n     * @param {number} [m00=1] - Component in column 0, row 0 position (index 0)\r\n     * @param {number} [m01=0] - Component in column 0, row 1 position (index 1)\r\n     * @param {number} [m02=0] - Component in column 0, row 2 position (index 2)\r\n     * @param {number} [m03=0] - Component in column 0, row 3 position (index 3)\r\n     * @param {number} [m10=0] - Component in column 1, row 0 position (index 4)\r\n     * @param {number} [m11=1] - Component in column 1, row 1 position (index 5)\r\n     * @param {number} [m12=0] - Component in column 1, row 2 position (index 6)\r\n     * @param {number} [m13=0] - Component in column 1, row 3 position (index 7)\r\n     * @param {number} [m20=0] - Component in column 2, row 0 position (index 8)\r\n     * @param {number} [m21=0] - Component in column 2, row 1 position (index 9)\r\n     * @param {number} [m22=1] - Component in column 2, row 2 position (index 10)\r\n     * @param {number} [m23=0] - Component in column 2, row 3 position (index 11)\r\n     * @param {number} [m30=0] - Component in column 3, row 0 position (index 12)\r\n     * @param {number} [m31=0] - Component in column 3, row 1 position (index 13)\r\n     * @param {number} [m32=0] - Component in column 3, row 2 position (index 14)\r\n     * @param {number} [m33=1] - Component in column 3, row 3 position (index 15)\r\n     * @memberof Matrix4\r\n     */\r\n    constructor(m00 = 1, m01 = 0, m02 = 0, m03 = 0, m10 = 0, m11 = 1, m12 = 0, m13 = 0, m20 = 0, m21 = 0, m22 = 1, m23 = 0, m30 = 0, m31 = 0, m32 = 0, m33 = 1) {\r\n        this.set(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\r\n    }\r\n    /**\r\n     * Sets the components of this Matrix4.\r\n     *\r\n     * If no parameters are given it resets this Matrix4 to an identity matrix.\r\n     *\r\n     * @param {number} [m00=1] - Component in column 0, row 0 position (index 0)\r\n     * @param {number} [m01=0] - Component in column 0, row 1 position (index 1)\r\n     * @param {number} [m02=0] - Component in column 0, row 2 position (index 2)\r\n     * @param {number} [m03=0] - Component in column 0, row 3 position (index 3)\r\n     * @param {number} [m10=0] - Component in column 1, row 0 position (index 4)\r\n     * @param {number} [m11=1] - Component in column 1, row 1 position (index 5)\r\n     * @param {number} [m12=0] - Component in column 1, row 2 position (index 6)\r\n     * @param {number} [m13=0] - Component in column 1, row 3 position (index 7)\r\n     * @param {number} [m20=0] - Component in column 2, row 0 position (index 8)\r\n     * @param {number} [m21=0] - Component in column 2, row 1 position (index 9)\r\n     * @param {number} [m22=1] - Component in column 2, row 2 position (index 10)\r\n     * @param {number} [m23=0] - Component in column 2, row 3 position (index 11)\r\n     * @param {number} [m30=0] - Component in column 3, row 0 position (index 12)\r\n     * @param {number} [m31=0] - Component in column 3, row 1 position (index 13)\r\n     * @param {number} [m32=0] - Component in column 3, row 2 position (index 14)\r\n     * @param {number} [m33=1] - Component in column 3, row 3 position (index 15)\r\n     * @returns {Matrix4}\r\n     * @memberof Matrix4\r\n     */\r\n    set(m00 = 1, m01 = 0, m02 = 0, m03 = 0, m10 = 0, m11 = 1, m12 = 0, m13 = 0, m20 = 0, m21 = 0, m22 = 1, m23 = 0, m30 = 0, m31 = 0, m32 = 0, m33 = 1) {\r\n        this.m00 = m00;\r\n        this.m01 = m01;\r\n        this.m02 = m02;\r\n        this.m03 = m03;\r\n        this.m10 = m10;\r\n        this.m11 = m11;\r\n        this.m12 = m12;\r\n        this.m13 = m13;\r\n        this.m20 = m20;\r\n        this.m21 = m21;\r\n        this.m22 = m22;\r\n        this.m23 = m23;\r\n        this.m30 = m30;\r\n        this.m31 = m31;\r\n        this.m32 = m32;\r\n        this.m33 = m33;\r\n        return this;\r\n    }\r\n    /**\r\n     * Sets all components of this Matrix4 to zero.\r\n     *\r\n     * @returns {Matrix4}\r\n     * @memberof Matrix4\r\n     */\r\n    zero() {\r\n        return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\r\n    }\r\n    /**\r\n     * Resets this Matrix4 to an identity matrix.\r\n     *\r\n     * @returns {Matrix4}\r\n     * @memberof Matrix4\r\n     */\r\n    identity() {\r\n        return this.set();\r\n    }\r\n    /**\r\n     * Returns a new array containg the Matrix4 component values in column-major format.\r\n     *\r\n     * @returns {number[]}\r\n     * @memberof Matrix4\r\n     */\r\n    getArray() {\r\n        return [this.m00, this.m01, this.m02, this.m03, this.m10, this.m11, this.m12, this.m13, this.m20, this.m21, this.m22, this.m23, this.m30, this.m31, this.m32, this.m33];\r\n    }\r\n    /**\r\n     * Sets the values of this Matrix4 based on the given array, or array-like object, such as a Float32.\r\n     *\r\n     * The source must have 16 elements, starting from index 0 through to index 15.\r\n     *\r\n     * @param {number[]} src - The source array to copy the values from.\r\n     * @returns {Matrix4}\r\n     * @memberof Matrix4\r\n     */\r\n    fromArray(src) {\r\n        return this.set(src[0], src[1], src[2], src[3], src[4], src[5], src[6], src[7], src[8], src[9], src[10], src[11], src[12], src[13], src[14], src[15]);\r\n    }\r\n    [Symbol.iterator]() {\r\n        const data = this.getArray();\r\n        return data[Symbol.iterator]();\r\n    }\r\n}\r\n//# sourceMappingURL=Matrix4.js.map","import { Matrix4 } from '@phaserjs/math-matrix4';\r\nexport function Ortho(left, right, bottom, top, near, far) {\r\n    const lr = 1 / (left - right);\r\n    const bt = 1 / (bottom - top);\r\n    const nf = 1 / (near - far);\r\n    const m00 = -2 * lr;\r\n    const m11 = -2 * bt;\r\n    const m22 = 2 * nf;\r\n    const m30 = (left + right) * lr;\r\n    const m31 = (top + bottom) * bt;\r\n    const m32 = (far + near) * nf;\r\n    return new Matrix4(m00, 0, 0, 0, 0, m11, 0, 0, 0, 0, m22, 0, m30, m31, m32, 1);\r\n}\r\n//# sourceMappingURL=Ortho.js.map","import Sprite from './TexturedSprite';\r\nimport Texture from './Texture';\r\nimport TexturedQuadShader from './TexturedQuadShader';\r\nimport { Ortho } from '@phaserjs/math-matrix4-funcs';\r\n\r\n//  Each sprite can use a different texture\r\n//  Batch flushes on a change of texture\r\n\r\nexport default function ()\r\n{\r\n    const canvas = document.getElementById('game') as HTMLCanvasElement;\r\n\r\n    canvas.width = 800;\r\n    canvas.height = 600;\r\n\r\n    const contextOptions: WebGLContextAttributes = {\r\n        alpha: false,\r\n        antialias: true,\r\n        premultipliedAlpha: false,\r\n        stencil: false,\r\n        preserveDrawingBuffer: false\r\n    };\r\n\r\n    const gl: WebGLRenderingContext = canvas.getContext('webgl', contextOptions);\r\n    \r\n    //  Create the shaders\r\n    \r\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n    \r\n    gl.shaderSource(fragmentShader, TexturedQuadShader.fragmentShader);\r\n    gl.compileShader(fragmentShader);\r\n    \r\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\r\n    \r\n    gl.shaderSource(vertexShader, TexturedQuadShader.vertexShader);\r\n    gl.compileShader(vertexShader);\r\n    \r\n    const program = gl.createProgram();\r\n    \r\n    gl.attachShader(program, vertexShader);\r\n    gl.attachShader(program, fragmentShader);\r\n    gl.linkProgram(program);\r\n\r\n    gl.useProgram(program);\r\n    \r\n    const vertexPositionAttrib = gl.getAttribLocation(program, 'aVertexPosition');\r\n    const vertexColorAttrib = gl.getAttribLocation(program, 'aColor');\r\n    const vertexTextureCoord = gl.getAttribLocation(program, 'aTextureCoord');\r\n    const uProjectionMatrix = gl.getUniformLocation(program, 'uProjectionMatrix');\r\n    const uTextureLocation = gl.getUniformLocation(program, 'uTexture');\r\n\r\n    gl.enableVertexAttribArray(vertexPositionAttrib);\r\n    gl.enableVertexAttribArray(vertexColorAttrib);\r\n    gl.enableVertexAttribArray(vertexTextureCoord);\r\n    \r\n    const resolution = { x: 800, y: 600 };\r\n\r\n    const maxSpritesPerBatch = 2000;\r\n\r\n    //  The size in bytes per element in the dataArray\r\n    const size = 4;\r\n\r\n    //  Size in bytes of a single vertex\r\n\r\n    /**\r\n     * Each vertex contains:\r\n     * \r\n     *  position (x,y - 2 floats)\r\n     *  color (r,g,b,a - 4 floats)\r\n     *  texture coord (x,y - 2 floats)\r\n     */\r\n    const singleVertexSize = 32;\r\n\r\n    //  Size of a single sprite in array elements\r\n    //  Each vertex = 8 elements, so 8 * 4\r\n    const singleSpriteSize = 32;\r\n\r\n    //  Size in bytes of a single sprite\r\n    const singleSpriteByteSize = singleVertexSize * size;\r\n\r\n    //  Size in bytes of a single vertex indicies\r\n    const singleIndexByteSize = 4;\r\n\r\n    //  Size in bytes of a single vertex indicies\r\n    const singleSpriteIndexSize = 6;\r\n\r\n    //  The size of our ArrayBuffer\r\n    const bufferByteSize = maxSpritesPerBatch * singleSpriteByteSize;\r\n\r\n    //  Our ArrayBuffer + View\r\n    const dataTA = new Float32Array(bufferByteSize);\r\n\r\n    let ibo = [];\r\n\r\n    //  Seed the index buffer\r\n    for (let i = 0; i < (maxSpritesPerBatch * singleIndexByteSize); i += singleIndexByteSize)\r\n    {\r\n        ibo.push(i + 0, i + 1, i + 2, i + 2, i + 3, i + 0);\r\n    }\r\n\r\n    //  Our buffers\r\n\r\n    const vertexBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, dataTA, gl.DYNAMIC_DRAW);\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n    \r\n    const indexBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(ibo), gl.STATIC_DRAW);\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\r\n    //  This matrix will convert from pixels to clip space - it only needs to be set when the canvas is sized\r\n    const projectionMatrix = Ortho(0, resolution.x, resolution.y, 0, -1000, 1000);\r\n    \r\n    const stride = 32;\r\n\r\n    //  Textures ...\r\n    const textures: Texture[] = [];\r\n\r\n    function loadTextures (urls: string[])\r\n    {\r\n        let texturesLeft = urls.length;\r\n\r\n        const onLoadCallback = () => {\r\n\r\n            texturesLeft--;\r\n\r\n            if (texturesLeft === 0)\r\n            {\r\n                console.log('load finished');\r\n                create();\r\n            }\r\n\r\n        }\r\n\r\n        urls.forEach((url, index) => {\r\n\r\n            let texture = new Texture(url, gl);\r\n\r\n            texture.load('../assets/' + url, onLoadCallback);\r\n\r\n            textures.push(texture);\r\n\r\n        });\r\n    }\r\n\r\n    loadTextures([\r\n        '128x128.png',\r\n        'brain.png',\r\n        'logo.png',\r\n        'shinyball.png'\r\n    ]);\r\n\r\n    const sprites: Sprite[] = [];\r\n\r\n    function create ()\r\n    {\r\n        //  Some textured sprites\r\n\r\n        for (let i = 0; i < 32; i++)\r\n        {\r\n            let x = Math.floor(Math.random() * (resolution.x - 200));\r\n            let y = Math.floor(Math.random() * (resolution.y - 100));\r\n\r\n            // let s = 0.2 + Math.random() * 0.8;\r\n            // let r = Math.random();\r\n\r\n            let s = 1;\r\n            let r = 0;\r\n\r\n            let t = textures[Math.floor(Math.random() * textures.length)];\r\n\r\n            // console.log('sprite', i, 'texture', t.key, 'at', x, y);\r\n\r\n            let sprite = new Sprite(x, y, t.width, t.height);\r\n\r\n            sprite.setTexture(t);\r\n            // sprite.setRotation(r);\r\n            // sprite.setScale(s);\r\n\r\n            sprites.push(sprite);\r\n        }\r\n\r\n        /*\r\n        let t1 = textures[0];\r\n        let t2 = textures[1];\r\n        let t3 = textures[2];\r\n\r\n        let sprite1 = new Sprite(64, 64, t1.width, t1.width).setTexture(t1);\r\n        let sprite2 = new Sprite(128, 64, t1.width, t1.width).setTexture(t1);\r\n        let sprite3 = new Sprite(196, 64, t1.width, t1.width).setTexture(t1);\r\n        let sprite4 = new Sprite(260, 64, t2.width, t2.width).setTexture(t2);\r\n        let sprite5 = new Sprite(300, 64, t2.width, t2.width).setTexture(t2);\r\n        let sprite6 = new Sprite(330, 64, t3.width, t3.width).setTexture(t3);\r\n\r\n        sprites.push(sprite1, sprite2, sprite3, sprite4, sprite5, sprite6);\r\n        */\r\n\r\n        render();\r\n    }\r\n\r\n    function flush (count: number)\r\n    {\r\n        const offset = count * singleSpriteByteSize;\r\n\r\n        if (offset === bufferByteSize)\r\n        {\r\n            gl.bufferData(gl.ARRAY_BUFFER, dataTA, gl.DYNAMIC_DRAW);\r\n        }\r\n        else\r\n        {\r\n            let view = dataTA.subarray(0, offset);\r\n\r\n            gl.bufferSubData(gl.ARRAY_BUFFER, 0, view);\r\n        }\r\n\r\n        // const deCount = count * singleSpriteIndexSize;\r\n        // const deStart = start * singleSpriteIndexSize;\r\n        // console.log('drawElements:', 'size', count, 'start', start, 'count', deCount, 'offset', deStart);\r\n\r\n        gl.drawElements(gl.TRIANGLES, count * singleSpriteIndexSize, gl.UNSIGNED_SHORT, 0);\r\n    }\r\n\r\n    function render ()\r\n    {\r\n        const renderList = sprites.map((sprite) => {\r\n\r\n            if (sprite.visible)\r\n            {\r\n                sprite.updateVertices();\r\n\r\n                return sprite;\r\n            }\r\n\r\n        });\r\n\r\n        gl.clearColor(0, 0, 0, 1);\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n        gl.enable(gl.BLEND);\r\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n        gl.viewport(0, 0, canvas.width, canvas.height);\r\n\r\n        gl.uniformMatrix4fv(uProjectionMatrix, false, projectionMatrix);\r\n\r\n        //  All sprites using the same texture index for now ...\r\n        gl.uniform1i(uTextureLocation, 0);\r\n\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\r\n\r\n        gl.activeTexture(gl.TEXTURE0);\r\n\r\n        /**\r\n         * Each vertex contains:\r\n         * \r\n         *  position (x,y - 2 floats)\r\n         *  color (r,g,b,a - 4 floats)\r\n         *  texture coord (x,y - 2 floats)\r\n         * \r\n         * 8 floats = 8 * 4 bytes = 32 bytes per vertex. This is our stride.\r\n         * The offset is how much data should be skipped at the start of each chunk.\r\n         * In our index, the color data is right after the position data.\r\n         * Position is 2 floats, so the offset for the color is 2 * 4 bytes = 8 bytes.\r\n         * Color is 4 floats, so the offset for the texture coord is 4 * 4 bytes = 16 bytes, plus the 8 from the position.\r\n         */\r\n\r\n        gl.vertexAttribPointer(vertexPositionAttrib, 2, gl.FLOAT, false, stride, 0);\r\n        gl.vertexAttribPointer(vertexColorAttrib, 4, gl.FLOAT, false, stride, 8);\r\n        gl.vertexAttribPointer(vertexTextureCoord, 2, gl.FLOAT, false, stride, 16 + 8);\r\n\r\n        let prevTexture = renderList[0].texture;\r\n        let size = 0;\r\n\r\n        for (let i = 0; i < renderList.length; i++)\r\n        {\r\n            let sprite = renderList[i];\r\n\r\n            if (sprite.texture !== prevTexture)\r\n            {\r\n                //  We've got a new texture, so lets flush\r\n                // console.log('Texture', prevTexture.key, 'for', size, 'sprites');\r\n\r\n                gl.bindTexture(gl.TEXTURE_2D, prevTexture.glTexture);\r\n\r\n                flush(size);\r\n\r\n                // start = i;\r\n                size = 0;\r\n                prevTexture = sprite.texture;\r\n            }\r\n\r\n            //  The offset here is the offset into the array, NOT a byte size!\r\n            sprite.batch(dataTA, size * singleSpriteSize);\r\n\r\n            size++;\r\n\r\n            //  if size = batch limit, flush here\r\n            if (size === maxSpritesPerBatch)\r\n            {\r\n                gl.bindTexture(gl.TEXTURE_2D, prevTexture.glTexture);\r\n\r\n                flush(size);\r\n    \r\n                // start = i;\r\n                size = 0;\r\n                prevTexture = sprite.texture;\r\n            }\r\n        }\r\n\r\n        if (size > 0)\r\n        {\r\n            // console.log('Final Texture', prevTexture.key, 'for', size, 'sprites');\r\n\r\n            gl.bindTexture(gl.TEXTURE_2D, prevTexture.glTexture);\r\n\r\n            flush(size);\r\n        }\r\n\r\n        requestAnimationFrame(render);\r\n    }\r\n}\r\n","import part01 from './part01';\r\nimport part02 from './part02';\r\nimport part03 from './part03';\r\nimport part04 from './part04';\r\nimport part05 from './part05';\r\nimport part06 from './part06';\r\nimport part07 from './part07';\r\nimport part08 from './part08';\r\nimport part09 from './part09';\r\nimport part10 from './part10';\r\nimport part11 from './part11';\r\nimport part12 from './part12';\r\nimport part13 from './part13';\r\nimport part14 from './part14';\r\nimport part15 from './part15';\r\nimport part16 from './part16';\r\nimport part17 from './part17';\r\n\r\npart17();\r\n\r\n//  Next steps:\r\n\r\n//  * Camera matrix, added to the shader (projection * camera * vertex pos), so we can move the camera around, rotate it, etc.\r\n//  X Sub-data buffer with batch flush, like current renderer handles it\r\n//  * Transform stack test (Quad with children, children of children, etc)\r\n//  * Instead of a Quad class, try a class that can have any number of vertices in it (ala Rope), or any vertex moved\r\n//  * Encode color as a single float, rather than a vec4\r\n\r\n//  * Add a basic display list, so the buffer is cleared each frame and populated via the list\r\n//  X Try adding all quads to a single huge buffer on creation (remove on destruction), then in the render loop\r\n//    copy chunks from this buffer to the gl buffer - depends how fast typed array copies are vs. pushing elements by index\r\n"],"names":["Sprite","Transform","constructor","x","y","width","height","r","g","b","a","topLeft","topRight","bottomLeft","bottomRight","_size","Vec2","rgba","updateVertices","setTexture","texture","set","dirty","update","w","h","x0","_origin","x1","y0","y1","c","d","tx","ty","local","x0a","x0b","y0c","y0d","x1a","x1b","y1c","y1d","batch","dataTA","offset","uv","Texture","key","gl","onLoad","glTexture","createTexture","bindTexture","TEXTURE_2D","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","image","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","onload","_onLoadCallback","load","url","callback","Image","src","complete","fragmentShader","vertexShader","canvas","document","getElementById","contextOptions","alpha","antialias","premultipliedAlpha","stencil","preserveDrawingBuffer","getContext","createShader","FRAGMENT_SHADER","shaderSource","TexturedQuadShader","compileShader","VERTEX_SHADER","program","createProgram","attachShader","linkProgram","useProgram","vertexPositionAttrib","getAttribLocation","vertexColorAttrib","vertexTextureCoord","uProjectionMatrix","getUniformLocation","uTextureLocation","enableVertexAttribArray","resolution","maxSpritesPerBatch","size","singleVertexSize","singleSpriteSize","singleSpriteByteSize","singleIndexByteSize","singleSpriteIndexSize","bufferByteSize","Float32Array","ibo","i","push","vertexBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","DYNAMIC_DRAW","indexBuffer","ELEMENT_ARRAY_BUFFER","Uint16Array","STATIC_DRAW","projectionMatrix","Ortho","stride","textures","loadTextures","urls","texturesLeft","length","onLoadCallback","console","log","create","forEach","index","sprites","Math","floor","random","t","sprite","render","flush","count","view","subarray","bufferSubData","drawElements","TRIANGLES","UNSIGNED_SHORT","renderList","map","visible","clearColor","clear","COLOR_BUFFER_BIT","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","viewport","uniformMatrix4fv","uniform1i","activeTexture","TEXTURE0","vertexAttribPointer","FLOAT","prevTexture","requestAnimationFrame","part17"],"mappings":";;;;;;;;;;;;;;;AAUM,MAAO,QAAP,CAAe;AAoBjB,EAAA,WAAA,GAAuG;AAAA,QAA1F,CAA0F,uEAA9E,CAA8E;AAAA,QAA3E,CAA2E,uEAA/D,CAA+D;AAAA,QAA5D,CAA4D,uEAAhD,CAAgD;AAAA,QAA7C,CAA6C,uEAAjC,CAAiC;AAAA,QAA9B,EAA8B,uEAAjB,CAAiB;AAAA,QAAd,EAAc,uEAAD,CAAC;AAEnG,SAAK,GAAL,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,EAArB,EAAyB,EAAzB;AACH;;AAED,EAAA,GAAG,GAA4F;AAAA,QAA1F,CAA0F,uEAA9E,CAA8E;AAAA,QAA3E,CAA2E,uEAA/D,CAA+D;AAAA,QAA5D,CAA4D,uEAAhD,CAAgD;AAAA,QAA7C,CAA6C,uEAAjC,CAAiC;AAAA,QAA9B,EAA8B,uEAAjB,CAAiB;AAAA,QAAd,EAAc,uEAAD,CAAC;AAE3F,SAAK,CAAL,GAAS,CAAT;AACA,SAAK,CAAL,GAAS,CAAT;AACA,SAAK,CAAL,GAAS,CAAT;AACA,SAAK,CAAL,GAAS,CAAT;AACA,SAAK,EAAL,GAAU,EAAV;AACA,SAAK,EAAL,GAAU,EAAV;AAEA,WAAO,IAAP;AACH;;AAED,EAAA,QAAQ,GAAA;AAEJ,WAAO,KAAK,GAAL,EAAP;AACH;;AAED,EAAA,OAAO,GAAA;AAEH,WAAO,CAAE,KAAK,CAAP,EAAU,KAAK,CAAf,EAAkB,KAAK,CAAvB,EAA0B,KAAK,CAA/B,EAAkC,KAAK,EAAvC,EAA2C,KAAK,EAAhD,CAAP;AACH;;AAED,EAAA,SAAS,CAAE,GAAF,EAAe;AAEpB,WAAO,KAAK,GAAL,CAAS,GAAG,CAAC,CAAD,CAAZ,EAAiB,GAAG,CAAC,CAAD,CAApB,EAAyB,GAAG,CAAC,CAAD,CAA5B,EAAiC,GAAG,CAAC,CAAD,CAApC,EAAyC,GAAG,CAAC,CAAD,CAA5C,EAAiD,GAAG,CAAC,CAAD,CAApD,CAAP;AACH;;AAED,GAAC,MAAM,CAAC,QAAR,IAAiB;AAEb,QAAM,IAAI,GAAG,KAAK,OAAL,EAAb;AAEA,WAAO,IAAI,CAAC,MAAM,CAAC,QAAR,CAAJ,EAAP;AACH;;AAzDgB;;ACVf,MAAO,IAAP,CAAW;AAyBb,EAAA,WAAA,GAAyC;AAAA,QAA5B,CAA4B,uEAAhB,CAAgB;AAAA,QAAb,CAAa,uEAAD,CAAC;AAErC,SAAK,GAAL,CAAS,CAAT,EAAY,CAAZ;AACH;;AAUD,EAAA,GAAG,GAA8B;AAAA,QAA5B,CAA4B,uEAAhB,CAAgB;AAAA,QAAb,CAAa,uEAAD,CAAC;AAE7B,SAAK,CAAL,GAAS,CAAT;AACA,SAAK,CAAL,GAAS,CAAT;AAEA,WAAO,IAAP;AACH;;AAQD,EAAA,IAAI,GAAA;AAEA,WAAO,KAAK,GAAL,EAAP;AACH;;AAQD,EAAA,QAAQ,GAAA;AAEJ,WAAO,CAAE,KAAK,CAAP,EAAU,KAAK,CAAf,CAAP;AACH;;AAWD,EAAA,SAAS,CAAE,GAAF,EAAe;AAEpB,WAAO,KAAK,GAAL,CAAS,GAAG,CAAC,CAAD,CAAZ,EAAiB,GAAG,CAAC,CAAD,CAApB,CAAP;AACH;;AAED,GAAC,MAAM,CAAC,QAAR,IAAiB;AAEb,QAAM,IAAI,GAAG,KAAK,QAAL,EAAb;AAEA,WAAO,IAAI,CAAC,MAAM,CAAC,QAAR,CAAJ,EAAP;AACH;;AAvFY;;ACGX,MAAO,SAAP,CAAgB;AAkBlB,EAAA,WAAA,GAA+F;AAAA,QAAlF,CAAkF,uEAAtE,CAAsE;AAAA,QAAnE,CAAmE,uEAAvD,CAAuD;AAAA,QAApD,QAAoD,uEAAjC,CAAiC;AAAA,QAA9B,MAA8B,uEAAb,CAAa;AAAA,QAAV,MAAU,uEAAD,CAAC;AAE3F,SAAK,KAAL,GAAa,IAAI,QAAJ,EAAb;AACA,SAAK,KAAL,GAAa,IAAI,QAAJ,EAAb;AAEA,SAAK,SAAL,GAAiB,IAAI,IAAJ,CAAS,CAAT,EAAY,CAAZ,CAAjB;AACA,SAAK,MAAL,GAAc,IAAI,IAAJ,CAAS,MAAT,EAAiB,MAAjB,CAAd;AACA,SAAK,KAAL,GAAa,IAAI,IAAJ,CAAS,CAAT,EAAY,CAAZ,CAAb;AACA,SAAK,OAAL,GAAe,IAAI,IAAJ,CAAS,CAAT,EAAY,CAAZ,CAAf;AACA,SAAK,SAAL,GAAiB,QAAjB;AAEA,SAAK,KAAL,GAAa,IAAb;AACH;;AAED,EAAA,MAAM,GAAA;AAEF,QAAI,CAAC,KAAK,KAAV,EACA;AACI,aAAO,KAAP;AACH;;AAED,QAAM;AAAE,MAAA,EAAF;AAAM,MAAA,EAAN;AAAU,MAAA,EAAV;AAAc,MAAA,EAAd;AAAkB,MAAA;AAAlB,QAAgC,IAAtC;AAKA,SAAK,KAAL,CAAW,GAAX,CAAe,EAAf,EAAmB,EAAnB,EAAuB,EAAvB,EAA2B,EAA3B,EAA+B,SAAS,CAAC,CAAzC,EAA4C,SAAS,CAAC,CAAtD;AAEA,SAAK,KAAL,GAAa,KAAb;AAEA,WAAO,IAAP;AACH;;AAED,EAAA,WAAW,CAAE,CAAF,EAAa,CAAb,EAAsB;AAE7B,SAAK,SAAL,CAAe,GAAf,CAAmB,CAAnB,EAAsB,CAAtB;;AAEA,SAAK,KAAL,GAAa,IAAb;AAEA,WAAO,IAAP;AACH;;AAED,EAAA,QAAQ,CAAE,MAAF,EAAyC;AAAA,QAAvB,MAAuB,uEAAN,MAAM;;AAE7C,SAAK,MAAL,CAAY,GAAZ,CAAgB,MAAhB,EAAwB,MAAxB;;AAEA,SAAK,KAAL,GAAa,IAAb;AAEA,SAAK,WAAL;AAEA,WAAO,IAAP;AACH;;AAED,EAAA,OAAO,CAAE,KAAF,EAAiB,KAAjB,EAA8B;AAEjC,SAAK,KAAL,CAAW,GAAX,CAAe,KAAf,EAAsB,KAAtB;;AAEA,SAAK,KAAL,GAAa,IAAb;AAEA,SAAK,WAAL;AAEA,WAAO,IAAP;AACH;;AAED,EAAA,SAAS,CAAE,OAAF,EAA4C;AAAA,QAAzB,OAAyB,uEAAP,OAAO;;AAEjD,SAAK,OAAL,CAAa,GAAb,CAAiB,OAAjB,EAA0B,OAA1B;;AAEA,SAAK,KAAL,GAAa,IAAb;AAEA,WAAO,IAAP;AACH;;AAED,EAAA,WAAW,CAAE,QAAF,EAAkB;AAEzB,SAAK,QAAL,GAAgB,QAAhB;AAEA,WAAO,IAAP;AACH;;AAEO,EAAA,WAAW,GAAA;AAEf,QAAM;AAAE,MAAA,SAAF;AAAa,MAAA,KAAb;AAAoB,MAAA;AAApB,QAA+B,IAArC;AAEA,SAAK,EAAL,GAAU,IAAI,CAAC,GAAL,CAAS,SAAS,GAAG,KAAK,CAAC,CAA3B,IAAgC,MAAM,CAAC,CAAjD;AACA,SAAK,EAAL,GAAU,IAAI,CAAC,GAAL,CAAS,SAAS,GAAG,KAAK,CAAC,CAA3B,IAAgC,MAAM,CAAC,CAAjD;AACA,SAAK,EAAL,GAAU,CAAC,IAAI,CAAC,GAAL,CAAS,SAAS,GAAG,KAAK,CAAC,CAA3B,CAAD,GAAiC,MAAM,CAAC,CAAlD;AACA,SAAK,EAAL,GAAU,IAAI,CAAC,GAAL,CAAS,SAAS,GAAG,KAAK,CAAC,CAA3B,IAAgC,MAAM,CAAC,CAAjD;AACH;;AAED,MAAI,CAAJ,CAAO,KAAP,EAAoB;AAEhB,SAAK,SAAL,CAAe,CAAf,GAAmB,KAAnB;AACA,SAAK,KAAL,GAAa,IAAb;AACH;;AAED,MAAI,CAAJ,GAAK;AAED,WAAO,KAAK,SAAL,CAAe,CAAtB;AACH;;AAED,MAAI,CAAJ,CAAO,KAAP,EAAoB;AAEhB,SAAK,SAAL,CAAe,CAAf,GAAmB,KAAnB;AACA,SAAK,KAAL,GAAa,IAAb;AACH;;AAED,MAAI,CAAJ,GAAK;AAED,WAAO,KAAK,SAAL,CAAe,CAAtB;AACH;;AAED,MAAI,QAAJ,CAAc,KAAd,EAA2B;AAEvB,SAAK,SAAL,GAAiB,KAAjB;AAEA,SAAK,KAAL,GAAa,IAAb;AAEA,SAAK,WAAL;AACH;;AAED,MAAI,QAAJ,GAAY;AAER,WAAO,KAAK,SAAZ;AACH;;AAED,MAAI,MAAJ,CAAY,KAAZ,EAAyB;AAErB,SAAK,MAAL,CAAY,CAAZ,GAAgB,KAAhB;AAEA,SAAK,KAAL,GAAa,IAAb;AAEA,SAAK,WAAL;AACH;;AAED,MAAI,MAAJ,GAAU;AAEN,WAAO,KAAK,MAAL,CAAY,CAAnB;AACH;;AAED,MAAI,MAAJ,CAAY,KAAZ,EAAyB;AAErB,SAAK,MAAL,CAAY,CAAZ,GAAgB,KAAhB;AAEA,SAAK,KAAL,GAAa,IAAb;AAEA,SAAK,WAAL;AACH;;AAED,MAAI,MAAJ,GAAU;AAEN,WAAO,KAAK,MAAL,CAAY,CAAnB;AACH;;AAED,MAAI,OAAJ,CAAa,KAAb,EAA0B;AAEtB,SAAK,OAAL,CAAa,CAAb,GAAiB,KAAjB;AAEA,SAAK,KAAL,GAAa,IAAb;AACH;;AAED,MAAI,OAAJ,GAAW;AAEP,WAAO,KAAK,OAAL,CAAa,CAApB;AACH;;AAED,MAAI,OAAJ,CAAa,KAAb,EAA0B;AAEtB,SAAK,OAAL,CAAa,CAAb,GAAiB,KAAjB;AAEA,SAAK,KAAL,GAAa,IAAb;AACH;;AAED,MAAI,OAAJ,GAAW;AAEP,WAAO,KAAK,OAAL,CAAa,CAApB;AACH;;AAED,MAAI,KAAJ,CAAW,KAAX,EAAwB;AAEpB,SAAK,KAAL,CAAW,CAAX,GAAe,KAAf;AAEA,SAAK,KAAL,GAAa,IAAb;AAEA,SAAK,WAAL;AACH;;AAED,MAAI,KAAJ,GAAS;AAEL,WAAO,KAAK,KAAL,CAAW,CAAlB;AACH;;AAED,MAAI,KAAJ,CAAW,KAAX,EAAwB;AAEpB,SAAK,KAAL,CAAW,CAAX,GAAe,KAAf;AAEA,SAAK,KAAL,GAAa,IAAb;AAEA,SAAK,WAAL;AACH;;AAED,MAAI,KAAJ,GAAS;AAEL,WAAO,KAAK,KAAL,CAAW,CAAlB;AACH;;AA9NiB;;ACCP,MAAMA,MAAN,SAAqBC,SAArB,CACf;AAoBIC,EAAAA,WAAW,CAAEC,CAAF,EAAaC,CAAb,EAAwBC,KAAxB,EAAuCC,MAAvC,EACX;AAAA,QADkEC,CAClE,uEAD8E,CAC9E;AAAA,QADiFC,CACjF,uEAD6F,CAC7F;AAAA,QADgGC,CAChG,uEAD4G,CAC5G;AAAA,QAD+GC,CAC/G,uEAD2H,CAC3H;AACI,UAAMP,CAAN,EAASC,CAAT;;AADJ;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,qCAbmB,IAanB;;AAAA,qCAZmB,IAYnB;;AAAA,gCAVK;AACDO,MAAAA,OAAO,EAAE;AAAER,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,CAAC,EAAE;AAAX,OADR;AAEDQ,MAAAA,QAAQ,EAAE;AAAET,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,CAAC,EAAE;AAAX,OAFT;AAGDS,MAAAA,UAAU,EAAE;AAAEV,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,CAAC,EAAE;AAAX,OAHX;AAIDU,MAAAA,WAAW,EAAE;AAAEX,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,CAAC,EAAE;AAAX;AAJZ,KAUL;;AAAA;;AAGI,SAAKW,KAAL,GAAa,IAAIC,IAAJ,CAASX,KAAT,EAAgBC,MAAhB,CAAb;AAEA,SAAKK,OAAL,GAAe,IAAIK,IAAJ,EAAf;AACA,SAAKJ,QAAL,GAAgB,IAAII,IAAJ,EAAhB;AACA,SAAKH,UAAL,GAAkB,IAAIG,IAAJ,EAAlB;AACA,SAAKF,WAAL,GAAmB,IAAIE,IAAJ,EAAnB;AAEA,SAAKC,IAAL,GAAY;AAAEV,MAAAA,CAAF;AAAKC,MAAAA,CAAL;AAAQC,MAAAA,CAAR;AAAWC,MAAAA;AAAX,KAAZ;AAEA,SAAKQ,cAAL;AACH;;AAEDC,EAAAA,UAAU,CAAEC,OAAF,EACV;AACI,SAAKA,OAAL,GAAeA,OAAf;;AAEA,SAAKL,KAAL,CAAWM,GAAX,CAAeD,OAAO,CAACf,KAAvB,EAA8Be,OAAO,CAACd,MAAtC;;AAEA,SAAKgB,KAAL,GAAa,IAAb;AAEA,SAAKJ,cAAL;AAEA,WAAO,IAAP;AACH;;AAEDA,EAAAA,cAAc,GACd;AACI,QAAI,CAAC,KAAKI,KAAV,EACA;AACI,aAAO,KAAP;AACH;;AAED,SAAKC,MAAL;AAEA,QAAMC,CAAS,GAAG,KAAKT,KAAL,CAAWZ,CAA7B;AACA,QAAMsB,CAAS,GAAG,KAAKV,KAAL,CAAWX,CAA7B;AAEA,QAAMsB,EAAU,GAAG,EAAE,KAAKC,OAAL,CAAaxB,CAAb,GAAiBqB,CAAnB,CAAnB;AACA,QAAMI,EAAU,GAAGF,EAAE,GAAGF,CAAxB;AACA,QAAMK,EAAU,GAAG,EAAE,KAAKF,OAAL,CAAavB,CAAb,GAAiBqB,CAAnB,CAAnB;AACA,QAAMK,EAAU,GAAGD,EAAE,GAAGJ,CAAxB;AAEA,QAAM;AAAEf,MAAAA,CAAF;AAAKD,MAAAA,CAAL;AAAQsB,MAAAA,CAAR;AAAWC,MAAAA,CAAX;AAAcC,MAAAA,EAAd;AAAkBC,MAAAA;AAAlB,QAAyB,KAAKC,KAApC;AAIA,QAAMC,GAAW,GAAGV,EAAE,GAAGhB,CAAzB;AACA,QAAM2B,GAAW,GAAGX,EAAE,GAAGjB,CAAzB;AACA,QAAM6B,GAAW,GAAGT,EAAE,GAAGE,CAAzB;AACA,QAAMQ,GAAW,GAAGV,EAAE,GAAGG,CAAzB;AAEA,QAAMQ,GAAW,GAAGZ,EAAE,GAAGlB,CAAzB;AACA,QAAM+B,GAAW,GAAGb,EAAE,GAAGnB,CAAzB;AACA,QAAMiC,GAAW,GAAGZ,EAAE,GAAGC,CAAzB;AACA,QAAMY,GAAW,GAAGb,EAAE,GAAGE,CAAzB;AAEA,SAAKrB,OAAL,CAAaU,GAAb,CAAiBe,GAAG,GAAGE,GAAN,GAAYL,EAA7B,EAAiCI,GAAG,GAAGE,GAAN,GAAYL,EAA7C;AACA,SAAKtB,QAAL,CAAcS,GAAd,CAAkBmB,GAAG,GAAGF,GAAN,GAAYL,EAA9B,EAAkCQ,GAAG,GAAGF,GAAN,GAAYL,EAA9C;AACA,SAAKrB,UAAL,CAAgBQ,GAAhB,CAAoBe,GAAG,GAAGM,GAAN,GAAYT,EAAhC,EAAoCI,GAAG,GAAGM,GAAN,GAAYT,EAAhD;AACA,SAAKpB,WAAL,CAAiBO,GAAjB,CAAqBmB,GAAG,GAAGE,GAAN,GAAYT,EAAjC,EAAqCQ,GAAG,GAAGE,GAAN,GAAYT,EAAjD;AAEA,WAAO,IAAP;AACH;;AAEDU,EAAAA,KAAK,CAAEC,MAAF,EAAwBC,MAAxB,EACL;AACID,IAAAA,MAAM,CAACC,MAAM,GAAG,CAAV,CAAN,GAAqB,KAAKnC,OAAL,CAAaR,CAAlC;AACA0C,IAAAA,MAAM,CAACC,MAAM,GAAG,CAAV,CAAN,GAAqB,KAAKnC,OAAL,CAAaP,CAAlC;AACAyC,IAAAA,MAAM,CAACC,MAAM,GAAG,CAAV,CAAN,GAAqB,KAAK7B,IAAL,CAAUV,CAA/B;AACAsC,IAAAA,MAAM,CAACC,MAAM,GAAG,CAAV,CAAN,GAAqB,KAAK7B,IAAL,CAAUT,CAA/B;AACAqC,IAAAA,MAAM,CAACC,MAAM,GAAG,CAAV,CAAN,GAAqB,KAAK7B,IAAL,CAAUR,CAA/B;AACAoC,IAAAA,MAAM,CAACC,MAAM,GAAG,CAAV,CAAN,GAAqB,KAAK7B,IAAL,CAAUP,CAA/B;AACAmC,IAAAA,MAAM,CAACC,MAAM,GAAG,CAAV,CAAN,GAAqB,KAAKC,EAAL,CAAQpC,OAAR,CAAgBR,CAArC;AACA0C,IAAAA,MAAM,CAACC,MAAM,GAAG,CAAV,CAAN,GAAqB,KAAKC,EAAL,CAAQpC,OAAR,CAAgBP,CAArC;AAEAyC,IAAAA,MAAM,CAACC,MAAM,GAAG,CAAV,CAAN,GAAqB,KAAKjC,UAAL,CAAgBV,CAArC;AACA0C,IAAAA,MAAM,CAACC,MAAM,GAAG,CAAV,CAAN,GAAqB,KAAKjC,UAAL,CAAgBT,CAArC;AACAyC,IAAAA,MAAM,CAACC,MAAM,GAAG,EAAV,CAAN,GAAsB,KAAK7B,IAAL,CAAUV,CAAhC;AACAsC,IAAAA,MAAM,CAACC,MAAM,GAAG,EAAV,CAAN,GAAsB,KAAK7B,IAAL,CAAUT,CAAhC;AACAqC,IAAAA,MAAM,CAACC,MAAM,GAAG,EAAV,CAAN,GAAsB,KAAK7B,IAAL,CAAUR,CAAhC;AACAoC,IAAAA,MAAM,CAACC,MAAM,GAAG,EAAV,CAAN,GAAsB,KAAK7B,IAAL,CAAUP,CAAhC;AACAmC,IAAAA,MAAM,CAACC,MAAM,GAAG,EAAV,CAAN,GAAsB,KAAKC,EAAL,CAAQlC,UAAR,CAAmBV,CAAzC;AACA0C,IAAAA,MAAM,CAACC,MAAM,GAAG,EAAV,CAAN,GAAsB,KAAKC,EAAL,CAAQlC,UAAR,CAAmBT,CAAzC;AAEAyC,IAAAA,MAAM,CAACC,MAAM,GAAG,EAAV,CAAN,GAAsB,KAAKhC,WAAL,CAAiBX,CAAvC;AACA0C,IAAAA,MAAM,CAACC,MAAM,GAAG,EAAV,CAAN,GAAsB,KAAKhC,WAAL,CAAiBV,CAAvC;AACAyC,IAAAA,MAAM,CAACC,MAAM,GAAG,EAAV,CAAN,GAAsB,KAAK7B,IAAL,CAAUV,CAAhC;AACAsC,IAAAA,MAAM,CAACC,MAAM,GAAG,EAAV,CAAN,GAAsB,KAAK7B,IAAL,CAAUT,CAAhC;AACAqC,IAAAA,MAAM,CAACC,MAAM,GAAG,EAAV,CAAN,GAAsB,KAAK7B,IAAL,CAAUR,CAAhC;AACAoC,IAAAA,MAAM,CAACC,MAAM,GAAG,EAAV,CAAN,GAAsB,KAAK7B,IAAL,CAAUP,CAAhC;AACAmC,IAAAA,MAAM,CAACC,MAAM,GAAG,EAAV,CAAN,GAAsB,KAAKC,EAAL,CAAQjC,WAAR,CAAoBX,CAA1C;AACA0C,IAAAA,MAAM,CAACC,MAAM,GAAG,EAAV,CAAN,GAAsB,KAAKC,EAAL,CAAQjC,WAAR,CAAoBV,CAA1C;AAEAyC,IAAAA,MAAM,CAACC,MAAM,GAAG,EAAV,CAAN,GAAsB,KAAKlC,QAAL,CAAcT,CAApC;AACA0C,IAAAA,MAAM,CAACC,MAAM,GAAG,EAAV,CAAN,GAAsB,KAAKlC,QAAL,CAAcR,CAApC;AACAyC,IAAAA,MAAM,CAACC,MAAM,GAAG,EAAV,CAAN,GAAsB,KAAK7B,IAAL,CAAUV,CAAhC;AACAsC,IAAAA,MAAM,CAACC,MAAM,GAAG,EAAV,CAAN,GAAsB,KAAK7B,IAAL,CAAUT,CAAhC;AACAqC,IAAAA,MAAM,CAACC,MAAM,GAAG,EAAV,CAAN,GAAsB,KAAK7B,IAAL,CAAUR,CAAhC;AACAoC,IAAAA,MAAM,CAACC,MAAM,GAAG,EAAV,CAAN,GAAsB,KAAK7B,IAAL,CAAUP,CAAhC;AACAmC,IAAAA,MAAM,CAACC,MAAM,GAAG,EAAV,CAAN,GAAsB,KAAKC,EAAL,CAAQnC,QAAR,CAAiBT,CAAvC;AACA0C,IAAAA,MAAM,CAACC,MAAM,GAAG,EAAV,CAAN,GAAsB,KAAKC,EAAL,CAAQnC,QAAR,CAAiBR,CAAvC;AACH;;AA7HL;;ACHe,MAAM4C,OAAN,CACf;AAYI9C,EAAAA,WAAW,CAAE+C,GAAF,EAAeC,EAAf,EACX;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACI,SAAKD,GAAL,GAAWA,GAAX;AAEA,SAAKC,EAAL,GAAUA,EAAV;AACH;;AAEDC,EAAAA,MAAM,GACN;AAGI,QAAMD,EAAE,GAAG,KAAKA,EAAhB;AAEA,SAAKE,SAAL,GAAiB,KAAKF,EAAL,CAAQG,aAAR,EAAjB;AAEAH,IAAAA,EAAE,CAACI,WAAH,CAAeJ,EAAE,CAACK,UAAlB,EAA8B,KAAKH,SAAnC;AAEAF,IAAAA,EAAE,CAACM,WAAH,CAAeN,EAAE,CAACO,8BAAlB,EAAkD,IAAlD;AAEAP,IAAAA,EAAE,CAACQ,UAAH,CAAcR,EAAE,CAACK,UAAjB,EAA6B,CAA7B,EAAgCL,EAAE,CAACS,IAAnC,EAAyCT,EAAE,CAACS,IAA5C,EAAkDT,EAAE,CAACU,aAArD,EAAoE,KAAKC,KAAzE;AAEAX,IAAAA,EAAE,CAACY,aAAH,CAAiBZ,EAAE,CAACK,UAApB,EAAgCL,EAAE,CAACa,kBAAnC,EAAuDb,EAAE,CAACc,MAA1D;AACAd,IAAAA,EAAE,CAACY,aAAH,CAAiBZ,EAAE,CAACK,UAApB,EAAgCL,EAAE,CAACe,kBAAnC,EAAuDf,EAAE,CAACc,MAA1D;AAEAd,IAAAA,EAAE,CAACY,aAAH,CAAiBZ,EAAE,CAACK,UAApB,EAAgCL,EAAE,CAACgB,cAAnC,EAAmDhB,EAAE,CAACiB,aAAtD;AACAjB,IAAAA,EAAE,CAACY,aAAH,CAAiBZ,EAAE,CAACK,UAApB,EAAgCL,EAAE,CAACkB,cAAnC,EAAmDlB,EAAE,CAACiB,aAAtD;AAEA,SAAK9D,KAAL,GAAa,KAAKwD,KAAL,CAAWxD,KAAxB;AACA,SAAKC,MAAL,GAAc,KAAKuD,KAAL,CAAWvD,MAAzB;AAKA,SAAKuD,KAAL,CAAWQ,MAAX,GAAoB,IAApB;;AAEA,QAAI,KAAKC,eAAT,EACA;AACI,WAAKA,eAAL,CAAqB,IAArB;AACH;AACJ;;AAEDC,EAAAA,IAAI,CAAEC,GAAF,EAAeC,QAAf,EACJ;AAGI,SAAKZ,KAAL,GAAa,IAAIa,KAAJ,EAAb;;AAEA,SAAKb,KAAL,CAAWQ,MAAX,GAAoB,MAAM,KAAKlB,MAAL,EAA1B;;AAEA,SAAKU,KAAL,CAAWc,GAAX,GAAiBH,GAAjB;;AAEA,QAAIC,QAAJ,EACA;AACI,WAAKH,eAAL,GAAuBG,QAAvB;AACH;;AAGD,QAAI,KAAKZ,KAAL,CAAWe,QAAX,IAAuB,KAAKf,KAAL,CAAWxD,KAAlC,IAA2C,KAAKwD,KAAL,CAAWvD,MAA1D,EACA;AACI,WAAK6C,MAAL;AACH;AACJ;;AAzEL;;ACHA,yBAAe;AAEX0B,EAAAA,cAAc,uPAFH;AAgBXC,EAAAA,YAAY;AAhBD,CAAf;;ACAM,MAAO,OAAP,CAAc;AAyJhB,EAAA,WAAA,GAA2R;AAAA,QAA9Q,GAA8Q,uEAAhQ,CAAgQ;AAAA,QAA7P,GAA6P,uEAA/O,CAA+O;AAAA,QAA5O,GAA4O,uEAA9N,CAA8N;AAAA,QAA3N,GAA2N,uEAA7M,CAA6M;AAAA,QAA1M,GAA0M,uEAA5L,CAA4L;AAAA,QAAzL,GAAyL,uEAA3K,CAA2K;AAAA,QAAxK,GAAwK,uEAA1J,CAA0J;AAAA,QAAvJ,GAAuJ,uEAAzI,CAAyI;AAAA,QAAtI,GAAsI,uEAAxH,CAAwH;AAAA,QAArH,GAAqH,uEAAvG,CAAuG;AAAA,QAApG,GAAoG,0EAAtF,CAAsF;AAAA,QAAnF,GAAmF,0EAArE,CAAqE;AAAA,QAAlE,GAAkE,0EAApD,CAAoD;AAAA,QAAjD,GAAiD,0EAAnC,CAAmC;AAAA,QAAhC,GAAgC,0EAAlB,CAAkB;AAAA,QAAf,GAAe,0EAAD,CAAC;AAEvR,SAAK,GAAL,CAAS,GAAT,EAAc,GAAd,EAAmB,GAAnB,EAAwB,GAAxB,EAA6B,GAA7B,EAAkC,GAAlC,EAAuC,GAAvC,EAA4C,GAA5C,EAAiD,GAAjD,EAAsD,GAAtD,EAA2D,GAA3D,EAAgE,GAAhE,EAAqE,GAArE,EAA0E,GAA1E,EAA+E,GAA/E,EAAoF,GAApF;AACH;;AA0BD,EAAA,GAAG,GAAgR;AAAA,QAA9Q,GAA8Q,uEAAhQ,CAAgQ;AAAA,QAA7P,GAA6P,uEAA/O,CAA+O;AAAA,QAA5O,GAA4O,uEAA9N,CAA8N;AAAA,QAA3N,GAA2N,uEAA7M,CAA6M;AAAA,QAA1M,GAA0M,uEAA5L,CAA4L;AAAA,QAAzL,GAAyL,uEAA3K,CAA2K;AAAA,QAAxK,GAAwK,uEAA1J,CAA0J;AAAA,QAAvJ,GAAuJ,uEAAzI,CAAyI;AAAA,QAAtI,GAAsI,uEAAxH,CAAwH;AAAA,QAArH,GAAqH,uEAAvG,CAAuG;AAAA,QAApG,GAAoG,0EAAtF,CAAsF;AAAA,QAAnF,GAAmF,0EAArE,CAAqE;AAAA,QAAlE,GAAkE,0EAApD,CAAoD;AAAA,QAAjD,GAAiD,0EAAnC,CAAmC;AAAA,QAAhC,GAAgC,0EAAlB,CAAkB;AAAA,QAAf,GAAe,0EAAD,CAAC;AAE/Q,SAAK,GAAL,GAAW,GAAX;AACA,SAAK,GAAL,GAAW,GAAX;AACA,SAAK,GAAL,GAAW,GAAX;AACA,SAAK,GAAL,GAAW,GAAX;AACA,SAAK,GAAL,GAAW,GAAX;AACA,SAAK,GAAL,GAAW,GAAX;AACA,SAAK,GAAL,GAAW,GAAX;AACA,SAAK,GAAL,GAAW,GAAX;AACA,SAAK,GAAL,GAAW,GAAX;AACA,SAAK,GAAL,GAAW,GAAX;AACA,SAAK,GAAL,GAAW,GAAX;AACA,SAAK,GAAL,GAAW,GAAX;AACA,SAAK,GAAL,GAAW,GAAX;AACA,SAAK,GAAL,GAAW,GAAX;AACA,SAAK,GAAL,GAAW,GAAX;AACA,SAAK,GAAL,GAAW,GAAX;AAEA,WAAO,IAAP;AACH;;AAQD,EAAA,IAAI,GAAA;AAEA,WAAO,KAAK,GAAL,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiC,CAAjC,EAAoC,CAApC,EAAuC,CAAvC,EAA0C,CAA1C,EAA6C,CAA7C,EAAgD,CAAhD,EAAmD,CAAnD,EAAsD,CAAtD,CAAP;AACH;;AAQD,EAAA,QAAQ,GAAA;AAEJ,WAAO,KAAK,GAAL,EAAP;AACH;;AAQD,EAAA,QAAQ,GAAA;AAEJ,WAAO,CAAE,KAAK,GAAP,EAAY,KAAK,GAAjB,EAAsB,KAAK,GAA3B,EAAgC,KAAK,GAArC,EAA0C,KAAK,GAA/C,EAAoD,KAAK,GAAzD,EAA8D,KAAK,GAAnE,EAAwE,KAAK,GAA7E,EAAkF,KAAK,GAAvF,EAA4F,KAAK,GAAjG,EAAsG,KAAK,GAA3G,EAAgH,KAAK,GAArH,EAA0H,KAAK,GAA/H,EAAoI,KAAK,GAAzI,EAA8I,KAAK,GAAnJ,EAAwJ,KAAK,GAA7J,CAAP;AACH;;AAWD,EAAA,SAAS,CAAE,GAAF,EAAe;AAEpB,WAAO,KAAK,GAAL,CACH,GAAG,CAAC,CAAD,CADA,EACK,GAAG,CAAC,CAAD,CADR,EACa,GAAG,CAAC,CAAD,CADhB,EACqB,GAAG,CAAC,CAAD,CADxB,EAEH,GAAG,CAAC,CAAD,CAFA,EAEK,GAAG,CAAC,CAAD,CAFR,EAEa,GAAG,CAAC,CAAD,CAFhB,EAEqB,GAAG,CAAC,CAAD,CAFxB,EAGH,GAAG,CAAC,CAAD,CAHA,EAGK,GAAG,CAAC,CAAD,CAHR,EAGa,GAAG,CAAC,EAAD,CAHhB,EAGsB,GAAG,CAAC,EAAD,CAHzB,EAIH,GAAG,CAAC,EAAD,CAJA,EAIM,GAAG,CAAC,EAAD,CAJT,EAIe,GAAG,CAAC,EAAD,CAJlB,EAIwB,GAAG,CAAC,EAAD,CAJ3B,CAAP;AAMH;;AAED,GAAC,MAAM,CAAC,QAAR,IAAiB;AAEb,QAAM,IAAI,GAAG,KAAK,QAAL,EAAb;AAEA,WAAO,IAAI,CAAC,MAAM,CAAC,QAAR,CAAJ,EAAP;AACH;;AArQe;;ACEd,SAAU,KAAV,CAAiB,IAAjB,EAA+B,KAA/B,EAA8C,MAA9C,EAA8D,GAA9D,EAA2E,IAA3E,EAAyF,GAAzF,EAAoG;AAEtG,MAAM,EAAE,GAAW,KAAK,IAAI,GAAG,KAAZ,CAAnB;AACA,MAAM,EAAE,GAAW,KAAK,MAAM,GAAG,GAAd,CAAnB;AACA,MAAM,EAAE,GAAW,KAAK,IAAI,GAAG,GAAZ,CAAnB;AAEA,MAAM,GAAG,GAAW,CAAC,CAAD,GAAK,EAAzB;AACA,MAAM,GAAG,GAAW,CAAC,CAAD,GAAK,EAAzB;AACA,MAAM,GAAG,GAAW,IAAI,EAAxB;AACA,MAAM,GAAG,GAAW,CAAC,IAAI,GAAG,KAAR,IAAiB,EAArC;AACA,MAAM,GAAG,GAAW,CAAC,GAAG,GAAG,MAAP,IAAiB,EAArC;AACA,MAAM,GAAG,GAAW,CAAC,GAAG,GAAG,IAAP,IAAe,EAAnC;AAEA,SAAO,IAAI,OAAJ,CAAY,GAAZ,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,GAA7B,EAAkC,CAAlC,EAAqC,CAArC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,GAA9C,EAAmD,CAAnD,EAAsD,GAAtD,EAA2D,GAA3D,EAAgE,GAAhE,EAAqE,CAArE,CAAP;AACH;;ACRc,mBACf;AACI,MAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAf;AAEAF,EAAAA,MAAM,CAAC1E,KAAP,GAAe,GAAf;AACA0E,EAAAA,MAAM,CAACzE,MAAP,GAAgB,GAAhB;AAEA,MAAM4E,cAAsC,GAAG;AAC3CC,IAAAA,KAAK,EAAE,KADoC;AAE3CC,IAAAA,SAAS,EAAE,IAFgC;AAG3CC,IAAAA,kBAAkB,EAAE,KAHuB;AAI3CC,IAAAA,OAAO,EAAE,KAJkC;AAK3CC,IAAAA,qBAAqB,EAAE;AALoB,GAA/C;AAQA,MAAMrC,EAAyB,GAAG6B,MAAM,CAACS,UAAP,CAAkB,OAAlB,EAA2BN,cAA3B,CAAlC;AAIA,MAAML,cAAc,GAAG3B,EAAE,CAACuC,YAAH,CAAgBvC,EAAE,CAACwC,eAAnB,CAAvB;AAEAxC,EAAAA,EAAE,CAACyC,YAAH,CAAgBd,cAAhB,EAAgCe,kBAAkB,CAACf,cAAnD;AACA3B,EAAAA,EAAE,CAAC2C,aAAH,CAAiBhB,cAAjB;AAEA,MAAMC,YAAY,GAAG5B,EAAE,CAACuC,YAAH,CAAgBvC,EAAE,CAAC4C,aAAnB,CAArB;AAEA5C,EAAAA,EAAE,CAACyC,YAAH,CAAgBb,YAAhB,EAA8Bc,kBAAkB,CAACd,YAAjD;AACA5B,EAAAA,EAAE,CAAC2C,aAAH,CAAiBf,YAAjB;AAEA,MAAMiB,OAAO,GAAG7C,EAAE,CAAC8C,aAAH,EAAhB;AAEA9C,EAAAA,EAAE,CAAC+C,YAAH,CAAgBF,OAAhB,EAAyBjB,YAAzB;AACA5B,EAAAA,EAAE,CAAC+C,YAAH,CAAgBF,OAAhB,EAAyBlB,cAAzB;AACA3B,EAAAA,EAAE,CAACgD,WAAH,CAAeH,OAAf;AAEA7C,EAAAA,EAAE,CAACiD,UAAH,CAAcJ,OAAd;AAEA,MAAMK,oBAAoB,GAAGlD,EAAE,CAACmD,iBAAH,CAAqBN,OAArB,EAA8B,iBAA9B,CAA7B;AACA,MAAMO,iBAAiB,GAAGpD,EAAE,CAACmD,iBAAH,CAAqBN,OAArB,EAA8B,QAA9B,CAA1B;AACA,MAAMQ,kBAAkB,GAAGrD,EAAE,CAACmD,iBAAH,CAAqBN,OAArB,EAA8B,eAA9B,CAA3B;AACA,MAAMS,iBAAiB,GAAGtD,EAAE,CAACuD,kBAAH,CAAsBV,OAAtB,EAA+B,mBAA/B,CAA1B;AACA,MAAMW,gBAAgB,GAAGxD,EAAE,CAACuD,kBAAH,CAAsBV,OAAtB,EAA+B,UAA/B,CAAzB;AAEA7C,EAAAA,EAAE,CAACyD,uBAAH,CAA2BP,oBAA3B;AACAlD,EAAAA,EAAE,CAACyD,uBAAH,CAA2BL,iBAA3B;AACApD,EAAAA,EAAE,CAACyD,uBAAH,CAA2BJ,kBAA3B;AAEA,MAAMK,UAAU,GAAG;AAAEzG,IAAAA,CAAC,EAAE,GAAL;AAAUC,IAAAA,CAAC,EAAE;AAAb,GAAnB;AAEA,MAAMyG,kBAAkB,GAAG,IAA3B;AAGA,MAAMC,IAAI,GAAG,CAAb;AAWA,MAAMC,gBAAgB,GAAG,EAAzB;AAIA,MAAMC,gBAAgB,GAAG,EAAzB;AAGA,MAAMC,oBAAoB,GAAGF,gBAAgB,GAAGD,IAAhD;AAGA,MAAMI,mBAAmB,GAAG,CAA5B;AAGA,MAAMC,qBAAqB,GAAG,CAA9B;AAGA,MAAMC,cAAc,GAAGP,kBAAkB,GAAGI,oBAA5C;AAGA,MAAMpE,MAAM,GAAG,IAAIwE,YAAJ,CAAiBD,cAAjB,CAAf;AAEA,MAAIE,GAAG,GAAG,EAAV;;AAGA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAIV,kBAAkB,GAAGK,mBAA1C,EAAgEK,CAAC,IAAIL,mBAArE,EACA;AACII,IAAAA,GAAG,CAACE,IAAJ,CAASD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,GAAG,CAA3B,EAA8BA,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAG,CAAzC,EAA4CA,CAAC,GAAG,CAAhD;AACH;;AAID,MAAME,YAAY,GAAGvE,EAAE,CAACwE,YAAH,EAArB;AACAxE,EAAAA,EAAE,CAACyE,UAAH,CAAczE,EAAE,CAAC0E,YAAjB,EAA+BH,YAA/B;AACAvE,EAAAA,EAAE,CAAC2E,UAAH,CAAc3E,EAAE,CAAC0E,YAAjB,EAA+B/E,MAA/B,EAAuCK,EAAE,CAAC4E,YAA1C;AACA5E,EAAAA,EAAE,CAACyE,UAAH,CAAczE,EAAE,CAAC0E,YAAjB,EAA+B,IAA/B;AAEA,MAAMG,WAAW,GAAG7E,EAAE,CAACwE,YAAH,EAApB;AACAxE,EAAAA,EAAE,CAACyE,UAAH,CAAczE,EAAE,CAAC8E,oBAAjB,EAAuCD,WAAvC;AACA7E,EAAAA,EAAE,CAAC2E,UAAH,CAAc3E,EAAE,CAAC8E,oBAAjB,EAAuC,IAAIC,WAAJ,CAAgBX,GAAhB,CAAvC,EAA6DpE,EAAE,CAACgF,WAAhE;AACAhF,EAAAA,EAAE,CAACyE,UAAH,CAAczE,EAAE,CAAC0E,YAAjB,EAA+B,IAA/B;AAGA,MAAMO,gBAAgB,GAAGC,KAAK,CAAC,CAAD,EAAIxB,UAAU,CAACzG,CAAf,EAAkByG,UAAU,CAACxG,CAA7B,EAAgC,CAAhC,EAAmC,CAAC,IAApC,EAA0C,IAA1C,CAA9B;AAEA,MAAMiI,MAAM,GAAG,EAAf;AAGA,MAAMC,QAAmB,GAAG,EAA5B;;AAEA,WAASC,YAAT,CAAuBC,IAAvB,EACA;AACI,QAAIC,YAAY,GAAGD,IAAI,CAACE,MAAxB;;AAEA,QAAMC,cAAc,GAAG,MAAM;AAEzBF,MAAAA,YAAY;;AAEZ,UAAIA,YAAY,KAAK,CAArB,EACA;AACIG,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAC,QAAAA,MAAM;AACT;AAEJ,KAVD;;AAYAN,IAAAA,IAAI,CAACO,OAAL,CAAa,CAACvE,GAAD,EAAMwE,KAAN,KAAgB;AAEzB,UAAI5H,OAAO,GAAG,IAAI4B,OAAJ,CAAYwB,GAAZ,EAAiBtB,EAAjB,CAAd;AAEA9B,MAAAA,OAAO,CAACmD,IAAR,CAAa,eAAeC,GAA5B,EAAiCmE,cAAjC;AAEAL,MAAAA,QAAQ,CAACd,IAAT,CAAcpG,OAAd;AAEH,KARD;AASH;;AAEDmH,EAAAA,YAAY,CAAC,CACT,aADS,EAET,WAFS,EAGT,UAHS,EAIT,eAJS,CAAD,CAAZ;AAOA,MAAMU,OAAiB,GAAG,EAA1B;;AAEA,WAASH,MAAT,GACA;AAGI,SAAK,IAAIvB,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG,EAApB,EAAwBA,EAAC,EAAzB,EACA;AACI,UAAIpH,CAAC,GAAG+I,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBxC,UAAU,CAACzG,CAAX,GAAe,GAAhC,CAAX,CAAR;AACA,UAAIC,CAAC,GAAG8I,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBxC,UAAU,CAACxG,CAAX,GAAe,GAAhC,CAAX,CAAR;AAKA,AAGA,UAAIiJ,CAAC,GAAGf,QAAQ,CAACY,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBd,QAAQ,CAACI,MAApC,CAAD,CAAhB;AAIA,UAAIY,MAAM,GAAG,IAAItJ,MAAJ,CAAWG,CAAX,EAAcC,CAAd,EAAiBiJ,CAAC,CAAChJ,KAAnB,EAA0BgJ,CAAC,CAAC/I,MAA5B,CAAb;AAEAgJ,MAAAA,MAAM,CAACnI,UAAP,CAAkBkI,CAAlB;AAIAJ,MAAAA,OAAO,CAACzB,IAAR,CAAa8B,MAAb;AACH;;AAiBDC,IAAAA,MAAM;AACT;;AAED,WAASC,KAAT,CAAgBC,KAAhB,EACA;AACI,QAAM3G,MAAM,GAAG2G,KAAK,GAAGxC,oBAAvB;;AAEA,QAAInE,MAAM,KAAKsE,cAAf,EACA;AACIlE,MAAAA,EAAE,CAAC2E,UAAH,CAAc3E,EAAE,CAAC0E,YAAjB,EAA+B/E,MAA/B,EAAuCK,EAAE,CAAC4E,YAA1C;AACH,KAHD,MAKA;AACI,UAAI4B,IAAI,GAAG7G,MAAM,CAAC8G,QAAP,CAAgB,CAAhB,EAAmB7G,MAAnB,CAAX;AAEAI,MAAAA,EAAE,CAAC0G,aAAH,CAAiB1G,EAAE,CAAC0E,YAApB,EAAkC,CAAlC,EAAqC8B,IAArC;AACH;;AAMDxG,IAAAA,EAAE,CAAC2G,YAAH,CAAgB3G,EAAE,CAAC4G,SAAnB,EAA8BL,KAAK,GAAGtC,qBAAtC,EAA6DjE,EAAE,CAAC6G,cAAhE,EAAgF,CAAhF;AACH;;AAED,WAASR,MAAT,GACA;AACI,QAAMS,UAAU,GAAGf,OAAO,CAACgB,GAAR,CAAaX,MAAD,IAAY;AAEvC,UAAIA,MAAM,CAACY,OAAX,EACA;AACIZ,QAAAA,MAAM,CAACpI,cAAP;AAEA,eAAOoI,MAAP;AACH;AAEJ,KATkB,CAAnB;AAWApG,IAAAA,EAAE,CAACiH,UAAH,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACAjH,IAAAA,EAAE,CAACkH,KAAH,CAASlH,EAAE,CAACmH,gBAAZ;AAEAnH,IAAAA,EAAE,CAACoH,MAAH,CAAUpH,EAAE,CAACqH,KAAb;AACArH,IAAAA,EAAE,CAACsH,SAAH,CAAatH,EAAE,CAACuH,GAAhB,EAAqBvH,EAAE,CAACwH,mBAAxB;AAEAxH,IAAAA,EAAE,CAACyH,QAAH,CAAY,CAAZ,EAAe,CAAf,EAAkB5F,MAAM,CAAC1E,KAAzB,EAAgC0E,MAAM,CAACzE,MAAvC;AAEA4C,IAAAA,EAAE,CAAC0H,gBAAH,CAAoBpE,iBAApB,EAAuC,KAAvC,EAA8C2B,gBAA9C;AAGAjF,IAAAA,EAAE,CAAC2H,SAAH,CAAanE,gBAAb,EAA+B,CAA/B;AAEAxD,IAAAA,EAAE,CAACyE,UAAH,CAAczE,EAAE,CAAC8E,oBAAjB,EAAuCD,WAAvC;AACA7E,IAAAA,EAAE,CAACyE,UAAH,CAAczE,EAAE,CAAC0E,YAAjB,EAA+BH,YAA/B;AAEAvE,IAAAA,EAAE,CAAC4H,aAAH,CAAiB5H,EAAE,CAAC6H,QAApB;AAgBA7H,IAAAA,EAAE,CAAC8H,mBAAH,CAAuB5E,oBAAvB,EAA6C,CAA7C,EAAgDlD,EAAE,CAAC+H,KAAnD,EAA0D,KAA1D,EAAiE5C,MAAjE,EAAyE,CAAzE;AACAnF,IAAAA,EAAE,CAAC8H,mBAAH,CAAuB1E,iBAAvB,EAA0C,CAA1C,EAA6CpD,EAAE,CAAC+H,KAAhD,EAAuD,KAAvD,EAA8D5C,MAA9D,EAAsE,CAAtE;AACAnF,IAAAA,EAAE,CAAC8H,mBAAH,CAAuBzE,kBAAvB,EAA2C,CAA3C,EAA8CrD,EAAE,CAAC+H,KAAjD,EAAwD,KAAxD,EAA+D5C,MAA/D,EAAuE,KAAK,CAA5E;AAEA,QAAI6C,WAAW,GAAGlB,UAAU,CAAC,CAAD,CAAV,CAAc5I,OAAhC;AACA,QAAI0F,IAAI,GAAG,CAAX;;AAEA,SAAK,IAAIS,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGyC,UAAU,CAACtB,MAA/B,EAAuCnB,GAAC,EAAxC,EACA;AACI,UAAI+B,MAAM,GAAGU,UAAU,CAACzC,GAAD,CAAvB;;AAEA,UAAI+B,MAAM,CAAClI,OAAP,KAAmB8J,WAAvB,EACA;AAIIhI,QAAAA,EAAE,CAACI,WAAH,CAAeJ,EAAE,CAACK,UAAlB,EAA8B2H,WAAW,CAAC9H,SAA1C;AAEAoG,QAAAA,KAAK,CAAC1C,IAAD,CAAL;AAGAA,QAAAA,IAAI,GAAG,CAAP;AACAoE,QAAAA,WAAW,GAAG5B,MAAM,CAAClI,OAArB;AACH;;AAGDkI,MAAAA,MAAM,CAAC1G,KAAP,CAAaC,MAAb,EAAqBiE,IAAI,GAAGE,gBAA5B;AAEAF,MAAAA,IAAI;;AAGJ,UAAIA,IAAI,KAAKD,kBAAb,EACA;AACI3D,QAAAA,EAAE,CAACI,WAAH,CAAeJ,EAAE,CAACK,UAAlB,EAA8B2H,WAAW,CAAC9H,SAA1C;AAEAoG,QAAAA,KAAK,CAAC1C,IAAD,CAAL;AAGAA,QAAAA,IAAI,GAAG,CAAP;AACAoE,QAAAA,WAAW,GAAG5B,MAAM,CAAClI,OAArB;AACH;AACJ;;AAED,QAAI0F,IAAI,GAAG,CAAX,EACA;AAGI5D,MAAAA,EAAE,CAACI,WAAH,CAAeJ,EAAE,CAACK,UAAlB,EAA8B2H,WAAW,CAAC9H,SAA1C;AAEAoG,MAAAA,KAAK,CAAC1C,IAAD,CAAL;AACH;;AAEDqE,IAAAA,qBAAqB,CAAC5B,MAAD,CAArB;AACH;AACJ;;ACjTD6B,MAAM"}