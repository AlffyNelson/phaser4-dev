{"version":3,"file":"test035.js","sources":["part08.ts","test035.ts"],"sourcesContent":["export default function ()\r\n{\r\n    //  Added Ortho projection and Model transforms, with simple animation\r\n\r\n    const fs = `\r\n    precision mediump float;\r\n\r\n    varying vec4 vColor;\r\n    \r\n    void main (void)\r\n    {\r\n        gl_FragColor = vec4(vColor.r, vColor.g, vColor.b, vColor.a);\r\n    }\r\n    `;\r\n    \r\n    const vs = `\r\n    attribute vec4 aColor;\r\n    attribute vec2 aVertexPosition;\r\n\r\n    uniform mat4 uProjectionMatrix;\r\n    uniform mat4 uModelTransform;\r\n\r\n    varying vec4 vColor;\r\n    \r\n    void main (void)\r\n    {\r\n        vColor = aColor;\r\n    \r\n        gl_Position = uProjectionMatrix * uModelTransform * vec4(aVertexPosition, 0.0, 1.0);\r\n    }\r\n    `;\r\n\r\n    const canvas = document.getElementById('game') as HTMLCanvasElement;\r\n\r\n    canvas.width = 800;\r\n    canvas.height = 600;\r\n\r\n    const gl: WebGLRenderingContext = canvas.getContext('webgl');\r\n    \r\n    //  Create the shaders\r\n    \r\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n    \r\n    gl.shaderSource(fragmentShader, fs);\r\n    gl.compileShader(fragmentShader);\r\n    \r\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\r\n    \r\n    gl.shaderSource(vertexShader, vs);\r\n    gl.compileShader(vertexShader);\r\n    \r\n    const program = gl.createProgram();\r\n    \r\n    gl.attachShader(program, vertexShader);\r\n    gl.attachShader(program, fragmentShader);\r\n    gl.linkProgram(program);\r\n    \r\n    gl.useProgram(program);\r\n    \r\n    const vertexPositionAttrib = gl.getAttribLocation(program, 'aVertexPosition');\r\n    const vertexColorAttrib = gl.getAttribLocation(program, 'aColor');\r\n    const uModelTransform = gl.getUniformLocation(program, 'uModelTransform');\r\n    const uProjectionMatrix = gl.getUniformLocation(program, 'uProjectionMatrix');\r\n\r\n    gl.enableVertexAttribArray(vertexPositionAttrib);\r\n    gl.enableVertexAttribArray(vertexColorAttrib);\r\n    \r\n    const vertices = [];\r\n    const indices = [];\r\n\r\n    let totalQuads = 0;\r\n\r\n    const resolution = { x: 800, y: 600 };\r\n\r\n    //  Creates a 1 unit quad\r\n    function addQuad (r: number = 1, g: number = 1, b: number = 1, a: number = 1)\r\n    {\r\n        //  A 1 unit quad\r\n        let x1 = 0;\r\n        let y1 = 0;\r\n        let x2 = 1;\r\n        let y2 = 1;\r\n\r\n        //  top-left\r\n        vertices.push(x1, y1, r, g, b, a);\r\n\r\n        //  bottom-left\r\n        vertices.push(x1, y2, r, g, b, a);\r\n\r\n        //  bottom-right\r\n        vertices.push(x2, y2, r, g, b, a);\r\n\r\n        //  top-right\r\n        vertices.push(x2, y1, r, g, b, a);\r\n\r\n        const offset = totalQuads * 4;\r\n\r\n        indices.push(\r\n            offset, offset + 1, offset + 2,\r\n            offset, offset + 2, offset + 3\r\n        );\r\n\r\n        totalQuads++;\r\n    }\r\n\r\n    addQuad(0, 1, 0, 1);\r\n\r\n    const vertexBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n    \r\n    const indexBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\r\n    function getOrtho (left: number, right: number, bottom: number, top: number, near: number, far: number): Float32Array\r\n    {\r\n        const leftRight: number = 1 / (left - right);\r\n        const bottomTop: number = 1 / (bottom - top);\r\n        const nearFar: number = 1 / (near - far);\r\n      \r\n        const m00: number = -2 * leftRight;\r\n        const m11: number = -2 * bottomTop;\r\n        const m22: number = 2 * nearFar;\r\n        const m30: number = (left + right) * leftRight;\r\n        const m31: number = (top + bottom) * bottomTop;\r\n        const m32: number = (far + near) * nearFar;\r\n    \r\n        return new Float32Array([ m00, 0, 0, 0, 0, m11, 0, 0, 0, 0, m22, 0, m30, m31, m32, 1 ]);\r\n    }\r\n\r\n    function Identity (src: Float32Array): Float32Array\r\n    {\r\n        src[0] = 1;\r\n        src[1] = 0;\r\n        src[2] = 0;\r\n        src[3] = 0;\r\n        src[4] = 0;\r\n        src[5] = 1;\r\n        src[6] = 0;\r\n        src[7] = 0;\r\n        src[8] = 0;\r\n        src[9] = 0;\r\n        src[10] = 1;\r\n        src[11] = 0;\r\n        src[12] = 0;\r\n        src[13] = 0;\r\n        src[14] = 0;\r\n        src[15] = 1;\r\n\r\n        return src;\r\n    }\r\n\r\n    function Translate (src: Float32Array, x: number = 0, y: number = 0, z: number = 0): Float32Array\r\n    {\r\n        const m00 = src[0];\r\n        const m01 = src[1];\r\n        const m02 = src[2];\r\n        const m03 = src[3];\r\n        const m10 = src[4];\r\n        const m11 = src[5];\r\n        const m12 = src[6];\r\n        const m13 = src[7];\r\n        const m20 = src[8];\r\n        const m21 = src[9];\r\n        const m22 = src[10];\r\n        const m23 = src[11];\r\n        const m30 = src[12];\r\n        const m31 = src[13];\r\n        const m32 = src[14];\r\n        const m33 = src[15];\r\n    \r\n        const a30 = m00 * x + m10 * y + m20 * z + m30;\r\n        const a31 = m01 * x + m11 * y + m21 * z + m31;\r\n        const a32 = m02 * x + m12 * y + m22 * z + m32;\r\n        const a33 = m03 * x + m13 * y + m23 * z + m33;\r\n    \r\n        src[12] = a30;\r\n        src[13] = a31;\r\n        src[14] = a32;\r\n        src[15] = a33;\r\n\r\n        return src;\r\n    }\r\n\r\n    function Scale (src: Float32Array, scaleX: number, scaleY: number, scaleZ: number): Float32Array\r\n    {\r\n        src[0] *= scaleX;\r\n        src[1] *= scaleX;\r\n        src[2] *= scaleX;\r\n        src[3] *= scaleX;\r\n        src[4] *= scaleY;\r\n        src[5] *= scaleY;\r\n        src[6] *= scaleY;\r\n        src[7] *= scaleY;\r\n        src[8] *= scaleZ;\r\n        src[9] *= scaleZ;\r\n        src[10] *= scaleZ;\r\n        src[11] *= scaleZ;\r\n\r\n        return src;\r\n    }\r\n\r\n    function RotateZ (src: Float32Array, angle: number): Float32Array\r\n    {\r\n        const s: number = Math.sin(angle);\r\n        const c: number = Math.cos(angle);\r\n    \r\n        const m00 = src[0];\r\n        const m01 = src[1];\r\n        const m02 = src[2];\r\n        const m03 = src[3];\r\n        const m10 = src[4];\r\n        const m11 = src[5];\r\n        const m12 = src[6];\r\n        const m13 = src[7];\r\n    \r\n        const a00: number = m00 * c + m10 * s;\r\n        const a01: number = m01 * c + m11 * s;\r\n        const a02: number = m02 * c + m12 * s;\r\n        const a03: number = m03 * c + m13 * s;\r\n        const a10: number = m10 * c - m00 * s;\r\n        const a11: number = m11 * c - m01 * s;\r\n        const a12: number = m12 * c - m02 * s;\r\n        const a13: number = m13 * c - m03 * s;\r\n        \r\n        src[0] = a00;\r\n        src[1] = a01;\r\n        src[2] = a02;\r\n        src[3] = a03;\r\n        src[4] = a10;\r\n        src[5] = a11;\r\n        src[6] = a12;\r\n        src[7] = a13;\r\n\r\n        return src;\r\n    }\r\n\r\n    //  This matrix will convert from pixels to clip space - it only needs to be set when the canvas is sized\r\n    const projectionMatrix = getOrtho(0, resolution.x, resolution.y, 0, -1000, 1000);\r\n\r\n    //  Our modelView matrix\r\n    const modelTransform = new Float32Array([ 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ]);\r\n   \r\n    const stride = 24;\r\n\r\n    let x = 0;\r\n    let d = true;\r\n    let r = 0;\r\n\r\n    //  This approach only works for a single quad\r\n    function render ()\r\n    {\r\n        Identity(modelTransform);\r\n\r\n        //  Values are in screen space because we started with an ortho matrix\r\n\r\n        let width = 256;\r\n        let height = 256;\r\n\r\n        Translate(modelTransform, x, 300, 0);\r\n\r\n        x += (d) ? 4 : -4;\r\n\r\n        if (d && x >= 800)\r\n        {\r\n            d = false;\r\n        }\r\n        else if (!d && x <= 0)\r\n        {\r\n            d = true;\r\n        }\r\n\r\n        RotateZ(modelTransform, r);\r\n\r\n        r += 0.01;\r\n\r\n        //  Set origin to the center of the quad\r\n        Translate(modelTransform, width / -2, height / -2, 0);\r\n\r\n        //  Because it's a 1x1 unit quad, scale it to 256 x 256\r\n        Scale(modelTransform, width, height, 0);\r\n\r\n        gl.clearColor(0, 0, 0, 1);\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n        //  So alpha works\r\n        gl.enable(gl.BLEND);\r\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n        gl.viewport(0, 0, canvas.width, canvas.height);\r\n    \r\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n\r\n        gl.uniformMatrix4fv(uProjectionMatrix, false, projectionMatrix);\r\n        gl.uniformMatrix4fv(uModelTransform, false, modelTransform);\r\n\r\n        gl.vertexAttribPointer(vertexPositionAttrib, 2, gl.FLOAT, false, stride, 0);\r\n        gl.vertexAttribPointer(vertexColorAttrib, 4, gl.FLOAT, false, stride, 8);\r\n\r\n        gl.drawElements(gl.TRIANGLES, indices.length, gl.UNSIGNED_SHORT, 0);\r\n\r\n        requestAnimationFrame(render);\r\n    }\r\n    \r\n    requestAnimationFrame(render);\r\n}\r\n","import part01 from './part01';\r\nimport part02 from './part02';\r\nimport part03 from './part03';\r\nimport part04 from './part04';\r\nimport part05 from './part05';\r\nimport part06 from './part06';\r\nimport part07 from './part07';\r\nimport part08 from './part08';\r\n\r\npart08();\r\n"],"names":["fs","vs","canvas","document","getElementById","width","height","gl","getContext","fragmentShader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","vertexShader","VERTEX_SHADER","program","createProgram","attachShader","linkProgram","useProgram","vertexPositionAttrib","getAttribLocation","vertexColorAttrib","uModelTransform","getUniformLocation","uProjectionMatrix","enableVertexAttribArray","vertices","indices","totalQuads","resolution","x","y","addQuad","r","g","b","a","x1","y1","x2","y2","push","offset","vertexBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","indexBuffer","ELEMENT_ARRAY_BUFFER","Uint16Array","getOrtho","left","right","bottom","top","near","far","leftRight","bottomTop","nearFar","m00","m11","m22","m30","m31","m32","Identity","src","Translate","z","m01","m02","m03","m10","m12","m13","m20","m21","m23","m33","a30","a31","a32","a33","Scale","scaleX","scaleY","scaleZ","RotateZ","angle","s","Math","sin","c","cos","a00","a01","a02","a03","a10","a11","a12","a13","projectionMatrix","modelTransform","stride","d","render","clearColor","clear","COLOR_BUFFER_BIT","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","viewport","uniformMatrix4fv","vertexAttribPointer","FLOAT","drawElements","TRIANGLES","length","UNSIGNED_SHORT","requestAnimationFrame","part08"],"mappings":"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"}